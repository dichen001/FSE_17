HITId,HITTypeId,Title,Description,Keywords,Reward,CreationTime,MaxAssignments,RequesterAnnotation,AssignmentDurationInSeconds,AutoApprovalDelayInSeconds,Expiration,NumberOfSimilarHITs,LifetimeInSeconds,WorkerId,AssignmentStatus,AcceptTime,SubmitTime,AutoApprovalTime,ApprovalTime,RejectionTime,RequesterFeedback,WorkTimeInSeconds,LifetimeApprovalRate,Last30DaysApprovalRate,Last7DaysApprovalRate,Input.HIT_ID,Input.pr_link,Input.contributors_url,Input.closer,Input.cores,Input.p_num,Input.c_num,Answer.Comment,Input.submitter,Answer.P1_Submitter,Answer.P2_Cores,Answer.P3_External,Answer.Q1_Support?,Answer.Q1_Support_Comment,Answer.Q2_Alternate S?,Answer.Q2_Alternate_Comment,Answer.Q3_Dis_Solution?,Answer.Q3_Dis_Solution_Comment,Answer.Q4_Dis_Problem?,Answer.Q4_Dis_Problem_Comment,AssignmentId,Input.merged,Answer.Q5_Outcome?,Answer.Q5_Outcome_Comment?,Approve,Reject
3YZ7A3YHR5H8PSU8B9B7IM780WV5SM,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:14 PST 2016,,,A2958TQAW43MP6,Approved,Wed Nov 02 02:30:43 PDT 2016,Wed Nov 02 03:21:38 PDT 2016,Wed Nov 09 02:21:38 PST 2016,2016-11-09 10:22:29 UTC,,,3055,100% (12/12),100% (12/12),100% (11/11),1117,https://github.com/SpongePowered/SpongeAPI/pull/1012,https://github.com/SpongePowered/SpongeAPI/graphs/contributors,liach,"gabizou, Zidane, Minecrell",5,11,{},liach,liach,"gabizou, Zidane, Minecrell, zml2008,","kashike, liach, Tzky,","Y,others",But it would be a good idea to add @Deprecated to getMutexBits(). :+1:,"Y,core|Y,others","This appears to be breaking, so this should be targeted to the bleeding branch, not the master branch.$$$$The documentation on our all new branching model is still in the works. However master is only used for non-breaking changes (minor changes: 3.0.0 -> 3.1.0). Everything else will automatically target our 4.0.0 release which will contain breaking changes that were merged into bleeding.Corresponding Docs PR:SpongePowered/SpongeDocs#410$$$$@liachLets keep the mutex stuff to a separate PR as its muddying this one.","Y,bug","You implement canRunConcurrentWith and check the task being passed in. There is no reason to have the mutex bits or use them besides....public boolean canRunConcurrentWith(AITask task) {    return allowedConcurrentTaskTypeSet.contains(task.getTaskType());}","Y, no value","@Zidane How would I check that my HeadShakerAITask (LOOK) can run at the same time as RandomStrollAITask (MOVEMENT) or PluginYFollowPlayerAITask (MOVEMENT), but not at the same time as PluginYRandomLookAroundAITask (LOOK), if we don't have that method?",3IRIK4HM3B8QNZ3K980DJ7CBWWYC63,FALSE,NN,liach closed this on 8 Jan,,
3M4KL7H8KVB4ECVS396SERYZ6RT16E,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:38 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 07:22:04 PST 2016,Wed Nov 09 07:26:55 PST 2016,Wed Nov 16 07:26:55 PST 2016,,,,291,98% (39/40),0% (0/1),0% (0/1),1181,https://github.com/appc/cni/pull/94,https://github.com/appc/cni/graphs/contributors,ChengTiesheng,"steveeJ, eyakubovich",4,12,{},ChengTiesheng,ChengTiesheng,"steveeJ, jonboulle, dcbw, squaremo, eyakubovich, philips, tomdee, rosenhouse, zachgersh",ChengTiesheng,"Y,core","Thanks! I've commented on a handful of things -- typos and a moderate misunderstanding of a type. I think we'll be good to go once those are fixed up.$$$$Thanks @ChengTiesheng for your hard work. Your PR has collected quite an amount of commits, please squash them before we can merge this.",N,{},"Y,improve","took a first pass...overall, I highly approve of documenting a lot of these things, but I'm not 100% sold on mandating golint everywhere, seems like some silly false positives..",N,{},3N4BPTXIO9GT8859X3FENW307M0UK6,FALSE,NN,"Please refer to the new PR:Fix golint warnings. #136$$$$ ChengTiesheng closed this on Feb 26",,
3ZTE0JGGCEGEQLBUJ2H6CN3HVODOCF,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:48 PDT 2016,,,A38NFX88VZDMJ3,Approved,Tue Oct 25 18:47:08 PDT 2016,Tue Oct 25 18:57:35 PDT 2016,Tue Nov 01 18:57:35 PDT 2016,Tue Nov 01 17:51:57 PDT 2016,,,627,100% (7/7),100% (7/7),0% (0/0),1202,https://github.com/scummvm/scummvm/pull/645,https://github.com/scummvm/scummvm/graphs/contributors,csnover,"fingolfin, dreammaster, sev-",3,13,{},csnover,csnover,"fingolfin, dreammaster, sev-, csnover, bluegr, Strangerke, ordhoto, m-kiewitz, eriktorbjorn, aquadran, clone2727, DrMcCoy",na,N,{},"Y,core","I think hardcoding the path to something relative to the project files would be best, i.e. that you can easily drop the libraries next to the project files.","Y,improve","PR #630 implements proper support for iOS targets AFAIK. So, there might be some duplicate effort here","Y,not fit.","PR #630 implements proper support for iOS targets AFAIK. So, there might be some duplicate effort here.",3DR23U6WE62BMVYA1CE1K54SZUPET2,FALSE,NN,"csnover closed this on Feb 12It‰Ûªs not ready and I‰Ûªm not working on this right now. I will reopen this later when it is ready.",,
3W0KKJIARRXTOR024Y983KQPLSJ8KA,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:38 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 07:03:40 PST 2016,Wed Nov 09 07:10:00 PST 2016,Wed Nov 16 07:10:00 PST 2016,,,,380,98% (39/40),0% (0/1),0% (0/1),1206,https://github.com/libuv/libuv/pull/672,https://github.com/libuv/libuv/graphs/contributors,saghul,"bnoordhuis, piscisaureus, saghul",3,13,{},cjihrig,cjihrig,"bnoordhuis, piscisaureus, saghul, ry, indutny","sam-github, cjihrig",N,{},N,{},"Y,improve",One big drawback is that getenv() is inherently MT-unsafe. Another is that trusting the environment in setuid root programs is not necessarily wise.,N,{},3VFJCI1K40NWQUH93IZUKTONT69RGQ,FALSE,NY,"Landed in c0fa2e7, great work Colin! :tada:",,
3P520RYKCHUO45MC0E67XNPWLTG5U2,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:39 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 06:43:53 PST 2016,Mon Nov 07 06:57:28 PST 2016,Mon Nov 14 06:57:28 PST 2016,,,,815,98% (39/40),0% (0/1),0% (0/1),1209,https://github.com/dronekit/dronekit-python/pull/509,https://github.com/dronekit/dronekit-python/graphs/contributors,peterbarker,"tcr3dr, hamishwillee, geeksville",4,13,{},squilter,squilter,"hamishwillee, peterbarker, krufab, geeksville, mrpollo, tcr3dr",squilter,"Y,core","@squilter Thanks for this! I've added some comments ...I don't ""know"" the answer to:tried putting this into the vehicle.init() method, but it didn't work for some reason. @tcr3dr do you know where is the best place to put this?But I'd suggest trying in Vehicle.initialize since we set up the data stream there.Could you create a test class for this here?For extra kudos, it would also be cool if you could update vehicle state example. If you don't, then I will when I actually test this in anger.","Y,core","I think you'd be best off linking to http://mavlink.org/messages/common#MAV_AUTOPILOT_GENERIC rather than referring to mavutil.mavlink.FIRMWARE_VERSION_TYPE (this is the first value of the enum - would be better to link to the table, but it doesn't have an id to link to)ie... is of the enum `FIRMWARE_VERSION_TYPE <http://mavlink.org/messages/common#MAV_AUTOPILOT_GENERIC>`_.$$$$Having this documentation is certainly an improvement. Personally I'd still like these as individual attributes both for consistency, and because then we could link to them in the documentation and have clear separate descriptions of what each capability means. Thoughts?$$$$@squilter I've reviewed and added some notes. Thank you for adding some documentation. I would prefer that all public items were exposed as attributes (or functions) and individually documented. This is primarily for consistency, because even if it results in some more code, it ensures all the code looks the same and is documented in the same way. That is comforting for developers!@mrpollo and @tcr3dr might take a different view. @mrpollo Can you do a technical review on the contribution? I have not done ""full testing"" yet.$$$$@squilter What you should do in this case is copy the model of SystemStatusSo for each public item you'd create an attribute in your description:    .. py:attribute:: major        Major version number (integer).This allows me to link to the variable. You should also create documentation in your public methods - again creating linkable objects: eg.def is_stable(self):   """"""    Your description here.    """"""   return self.release == 255FYI, you were absolutely right be confused. We have been inconsistent - using param in many cases rather than attribute definition. I will change these in a future update.YOu also don't need to create variables as python attributes as I suggested in previous notes, since we haven't mostly done this for helper classes. Apologies for the incorrect suggestion.PPS I still quite like having the attribute observers in the helper class init. It just feels cleaner to me.","Y,bug","its failing on your test @squilter, it's fetching latest copter from our hosting, right now it's: ""APM:Copter V3.3""",N,{},379J5II41P4N3IQ5S3CAYEUB8J8LEI,FALSE,NN,peterbarker closed this on Feb 12,,
3XU9MCX6VO04PGB8E194U5Z0UKKR2I,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:39 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 06:34:41 PST 2016,Wed Nov 09 06:41:42 PST 2016,Wed Nov 16 06:41:42 PST 2016,,,,421,98% (39/40),0% (0/1),0% (0/1),1217,https://github.com/strongloop/loopback-connector-remote/pull/30,https://github.com/strongloop/loopback-connector-remote/graphs/contributors,superkhau,"bajtos, kraman",3,13,{},glesage,glesage,"Amir-61, bajtos, rmg, richardpringle, kraman, ritch, superkhau","glesage, slnode, altsang",N,{},"Y,core",move `parent: 'TestModel' down with the rest of the items in the list,N,{},N,{},3AZHRG4CU587WOLMEQ9VH3YRGBV30M,FALSE,NN,"Closing in favour of #31$$$$superkhau closed this on Jan 8",,
3BC9H1KCYU0ZYXL16GQ5Q88M1EUYW9,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:16 PST 2016,,,A2958TQAW43MP6,Approved,Tue Nov 01 23:43:59 PDT 2016,Tue Nov 01 23:48:29 PDT 2016,Tue Nov 08 22:48:29 PST 2016,2016-11-09 06:48:36 UTC,,,270,100% (12/12),100% (12/12),100% (11/11),1222,https://github.com/naver/arcus-java-client/pull/41,https://github.com/naver/arcus-java-client/graphs/contributors,jhpark816,"jhpark816, whchoi83",3,13,{},whchoi83,whchoi83,"jhpark816, whchoi83, aiceru, hoonmin",@jhpark816,N,{},"Y,core","setupForAuth() interface‘_Ó “_ê‘_÷‘ÎÛ‘ÁÏ êáü‘ÎÛ‘ÁÏ ‘Ôêê_Ê,,internal“Ñê“ãÏ setupResend()‘´_ ’÷ü“_Ï’¥Ê “ÜÏ“Ñê ""setup for auth""‘ù_‘_Ó string“ùã ‘ã÷êü¡‘_Ó ê_Î “¢Üê_Ê“_µ‘Üö‘Ü_.",N,{},N,{},3AWETUDC93GJOC9V3NTAR831E3ZIZI,FALSE,NY,@jhpark816 jhpark816 closed this on 27 Jan,,
3EQVJH0T409LKLRI1BH6HO6K7OZTHF,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:39 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 06:18:23 PST 2016,Wed Nov 09 06:34:35 PST 2016,Wed Nov 16 06:34:35 PST 2016,,,,972,98% (39/40),0% (0/1),0% (0/1),1228,https://github.com/facebook/buck/pull/611,https://github.com/facebook/buck/graphs/contributors,facebook-github-bot-6,"andrewjcg, bolinfest, bhamiltoncx",3,13,{},grumpyjames,grumpyjames,"andrewjcg, bolinfest, bhamiltoncx, ryu2","grumpyjames, facebook-github-bot, sdwilsh",N,{},N,{},N,{},N,{},3NQL1CS15SWO5SJQ68QASQKUJ7IVYP,FALSE,NN,ghost closed this in 972ef57 on Jan 13,,
3KTZHH2ONI3OEF05PAMOIXITAXE8MF,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:48 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:39 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 06:22:01 PST 2016,Mon Nov 07 06:34:23 PST 2016,Mon Nov 14 06:34:23 PST 2016,,,,742,98% (39/40),0% (0/1),0% (0/1),1243,https://github.com/openshift/origin/pull/6541,https://github.com/openshift/origin/graphs/contributors,jayunit100,"openshift-bot, smarterclayton, deads2k",4,14,{},jayunit100,jayunit100,"rajatchopra, mfojtik, pravisankar, liggitt, danwinship, dcbw, smarterclayton, deads2k, bparees, danmcp, openshift-bot, ncdc, jwforres","jayunit100, timothysc, jeremyeder, pmorie, stevekuznetsov",N,{},"Y,core","if the whole implementation of building the e2e test artifact is different, this probably should be a separate function, maybe even a separate script (build-e2e.sh, modeled after a combination of build-go.sh and test-integration.sh?)$$$$if a strong case can be made for a wrapped kube e2e, we should do the upstream work to allow wrapping it (putting the guts in a non _test file, and making the _test file a 3-line function we wouldn't mind duplicating","Y,inconsistency","Should be a separate build target, and should not need sudo to build$$$$raises eyebrow... hacking around the cross-package _test dependency prohibition is probably not a good idea. Why do we need a single binary containing kube e2e tests AND origin e2e tests again?",N,{},3UJ1CZ6IZIDABCS21BG8662TNJZS5I,FALSE,NN,Subsumed by #7049,,
3UYRNV2KITNUWXL51B1OVC7TFNO8NF,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:40 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 06:13:36 PST 2016,Wed Nov 09 06:59:55 PST 2016,Wed Nov 16 06:59:55 PST 2016,,,,2779,98% (39/40),0% (0/1),0% (0/1),1250,https://github.com/Homebrew/homebrew/pull/47792,https://github.com/Homebrew/homebrew/graphs/contributors,UniqMartin,"BrewTestBot, jacknagel, adamv",4,14,{},tonycosentini,tonycosentini,"BrewTestBot, jacknagel, adamv, mistydemeo","tonycosentini, UniqMartin, bfontaine, DomT4, MikeMcQuaid",N,{},N,{},"Y,improve","The CI isn't happy with your get_target_platform method and I'm neither (it's a bit over-engineered, no need for the constants either). To catch these types of failures earlier, you can run brew audit --strict infer locally, which will run a few checks on the formula.I think I understand why you introduced this get_target_platform method, but to me it finally revealed that maybe the options are named sub-optimally. Here's what I suggest to call them:without-clang: ‰ÛÏBuild without C/Objective-C analyzer‰Ûùwithout-java: ‰ÛÏBuild without Java analyzer‰ÛùThis inverts the logic, but makes everything easier in this formula (and for people who look at its options). You would still perform the sanity check at the beginning:if build.without?(""clang"") && build.without?(""java"")  odie ""infer: --without-clang and --without-java are mutually exclusive""endYou continue by inferring the target platform. More idiomatic Ruby code for this would be:target_platform = if build.without?(""clang"")  ""java""elsif build.without?(""java"")  ""clang""else  ""all""endA shorter (but more repetitive) alternative would be:target_platform = ""all""target_platform = ""java"" if build.without?(""clang"")target_platform = ""clang"" if build.without?(""java"")You can use that as you did previously in the invocation of build-infer.sh. The two parts of the test do block (by the way: awesome tests you added here; I wish every test do of a new formula looked like this) can now be guarded by either if build.with?(""clang"") or if build.with?(""java"").",N,{},3AQF3RZ5596XQBNU0AQERDXFW3TF6D,FALSE,NY,"Merged in 1a77218. Thank you for this contribution to Homebrew, @tonycosentini!",,
3MQKOF1EE2CW0MQAAK3RDNYLJQOWDZ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:49 PDT 2016,,,AT9K95UXPKH3J,Approved,Tue Oct 25 04:14:37 PDT 2016,Tue Oct 25 04:18:40 PDT 2016,Tue Nov 01 04:18:40 PDT 2016,2016-11-01 11:19:16 UTC,,,243,100% (3/3),100% (3/3),0% (0/0),1269,https://github.com/pkg/sftp/pull/68,https://github.com/pkg/sftp/graphs/contributors,sykesm,"davecheney, marksheahan",4,15,{},sykesm,https://github.com/sykesm,"davecheney, marksheahan",https://github.com/marksheahan https://github.com/mdlayher,"Y,others","Looks good to me. The way I'm using the server is to call Serve() in the ssh server sftp subsystem handler. This could allow sftp servers with different directories per session, not per connection, but I can't imagine any real use case for that.I occasionally worry about the number of worker pool goroutines spawned (8 per call to Serve()). Goroutines are cheap, but I'm not totally comfortable with it for some reason.$$$$Seems fine here as well. Can you rebase on master and push again?","Y,core","// functions may be specified to further configure the Server.  79 86  //  80 87  // A subsequent call to Serve() is required to begin serving files over SFTP.  81  -func NewServer(in io.Reader, out io.WriteCloser, rootDir string, options ...ServerOption) (*Server, error) {  82  -	if rootDir == """" {  83  -		wd, err := os.Getwd()  84  -		if err != nil {  85  -			return nil, err  86  -		}  87  -  88  -		rootDir = wd   88 +func NewServer(in io.Reader, out io.WriteCloser, workingDir string, options ...ServerOption) (*Server, error) {   89 +	workingDir, err := filepath.Abs(workingDir)  $$$$server_integration_test.go  509 510  	defer listenerGo.Close()  510 511    511  -	tmpFileLocal := ""/tmp/"" + randName()  512  -	tmpFileRemote := ""/tmp/"" + randName()   512 +	tmpFileLocal := filepath.Join(os.TempDir(), randName())  $$$$server_integration_test.go  539 575  	defer listenerGo.Close()  540 576    541  -	tmpFileLocal := ""/tmp/"" + randName()  542  -	tmpFileRemote := ""/tmp/"" + randName()   577 +	tmpFileLocal := filepath.Join(os.TempDir(), randName())",N,{},N,{},3COPXFW7XC0GG3XDGHGKDQG0UIYKP9,FALSE,NN,"sykesm  commented on Jan 13  Hi @davecheney. Given you're not on board with the motivation, I don't think it matters what the code looks like - there's a disconnect. That's part of the reason why I didn't want to make any changes until I heard back on my question.I'm going to close this PR and go back to the original issue where I hope we can come up with a possible means to get the behavior I desire that is not in conflict with where you want things to go.",,
30P8I9JKOI9OHKBC54GCT9RFZ0P5VR,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:49 PDT 2016,,,A1WSTW4R68I8KI,Approved,Mon Oct 24 23:13:46 PDT 2016,Mon Oct 24 23:37:24 PDT 2016,Mon Oct 31 23:37:24 PDT 2016,2016-11-01 06:38:14 UTC,,,1418,100% (7/7),100% (2/2),0% (0/0),1272,https://github.com/netty/netty/pull/4648,https://github.com/netty/netty/graphs/contributors,jza70,"trustin, normanmaurer, Scottmitch",4,15,{},jza70,jza70,"trustin, normanmaurer, Scottmitch, fredericBregier, CruzBishop, nmittler, jestan, veebs",netkins,"Y,core","@trustin @nmittler any concerns ?$$$$This seems reasonable to me ... @Scottmitch?","Y,core","When there's neither content-length header nor transfer-encoding: chunked header, it does not necessarily mean the content is empty. A server can send the indefinite amount of content until the end of the connection. A client cannot do this though.","Y,bug|Y,improve",@jza70 I think this is not really correct as if a message has Content-Length: 0 set it be preserved. Don't you think ?,"Y, no value","For example, simple 404 without header would require connection close.Yes, that's the correct behavior because we have no way to determine the content length of the 404 response.Are we talking high performance here?Nope. We are talking about correctness. If you do not like this behavior, you need to fix the server that sends a 404 without content-length header or switch to HTTP/2.",31Z0PCVWUL3QDGJ0E40VEVCBD0DT79,FALSE,NN,"@trustin, Do as you wish, but I believe it is wrong to assume identity content without any headers. In my case, it is inefficient to close connections after redirection response but in general case this can lead to hard to debug problems with loosing responses from pipelined requests and hanging connections (you are waiting for content). I guess I can report this as an issue.$$$$jza70 closed this on 10 Jan",,
3ZZAYRN1I6FVC2D55OCW1X3LJADTO3,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:43 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 05:52:22 PST 2016,Wed Nov 09 06:04:40 PST 2016,Wed Nov 16 06:04:40 PST 2016,,,,738,98% (39/40),0% (0/1),0% (0/1),1280,https://github.com/18F/college-choice/pull/1418,https://github.com/18F/college-choice/graphs/contributors,ultrasaurus,"shawnbot, meiqimichelle",4,15,{},shawnbot,shawnbot,"LisaGee, meiqimichelle, ErieMeyer, ultrasaurus, barkimedes, shawnbot, brownpl, kynetiv, hollyallen, yozlet","jjoteal, nickbristow, houndci-bot",N,{},"Y,core|Y,others","Pinging @jjoteal: how do you feel about giving these buttons white a background?$$$$@shawnbot -- Rather than the white background on the buttons themselves, I would be more apt to keep the format consistent with what is on the homepage, so the entire ""Paying for College"" section in a white card that contains all of the buttons:$$$$@shawnbot try using a span or div instead of a label, give that an id for the aria-labledby. The result should be the same for the screen reader.See if that gives you an error on codesniffer.",N,{},N,{},39ASUFLU6YVI3C7U6MFY98PZH5BXE3,TRUE,YY,ultrasaurus merged commit 989d578 into dev on Jan 27,,
341H3G5YF026VXUL9VZ3XK8K63JZ0Z,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:50 PDT 2016,,,A38NFX88VZDMJ3,Approved,Tue Oct 25 16:13:20 PDT 2016,Tue Oct 25 16:34:30 PDT 2016,Tue Nov 01 16:34:30 PDT 2016,2016-11-01 23:35:14 UTC,,,1270,100% (7/7),100% (7/7),0% (0/0),1290,https://github.com/NLog/NLog/pull/1157,https://github.com/NLog/NLog/graphs/contributors,304NotModified,"jkowalski, 304NotModified, Xharze",4,15,{},304NotModified,304NotModified,"jkowalski, 304NotModified, Xharze, bhaeussermann, Page-Not-Found",codecov-io,"Y,others",Wouldn't it be better if you expose a lock variable and use the same during modification of the list?,,{},N,{},N,{},3WZ36BJEV44DFSMQRLCBJXY7WWUTBX,TRUE,YY,Page-Not-Found added ready for merge and removed in-review labels,,
378G7J1SJLM1SS4A6FEBJ5G6J2PWES,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:40 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Thu Nov 10 03:44:24 PST 2016,Thu Nov 10 04:14:37 PST 2016,Thu Nov 17 04:14:37 PST 2016,,,,1813,98% (39/40),0% (0/1),0% (0/1),1292,https://github.com/facebook/react-native/pull/5105,https://github.com/facebook/react-native/graphs/contributors,facebook-github-bot-9,"vjeux, nicklockwood, mkonicek",7,16,{},Charca,Charca,"foghina, sahrens, javache, spicyj, andreicoman11, AaaChiuuu, satya164, tadeuzagallo, mkonicek, frantic, nicklockwood, cpojer, amasad, brentvatne, a2, vjeux, ide, ericvicenti, martinbigio, bestander","facebook-github-bot, terrysahaidak, kmagiera","Y,core",Looks good! Thank you!,N,{},N,{},N,{},3ON104KXQLKLMA5B7B7ZY3Z1VNZ4WH,FALSE,NN,ghost closed this in 2039be9 on Apr 12,,
38O9DZ0A62BB3XDOMD66JA84YX7620,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:44 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 05:59:42 PST 2016,Wed Nov 09 06:09:18 PST 2016,Wed Nov 16 06:09:18 PST 2016,,,,576,98% (39/40),0% (0/1),0% (0/1),1293,https://github.com/sindresorhus/ava/pull/407,https://github.com/sindresorhus/ava/graphs/contributors,sindresorhus,"sindresorhus, jamestalmage",5,16,{},jamestalmage,jamestalmage,"vdemedes, sindresorhus, jamestalmage, ariporad, novemberborn","kentcdodds, kevva","Y,core","Love it!$$$$Looks good :D","Y,core",Maybe mention the benefit of specifying config here instead of the CLI is that it will be used when you run it with $ ava.,N,{},N,{},3H7XDTSHKDF1YQYV2C907SW4LJXGWN,TRUE,YY,sindresorhus merged commit dd88680 into avajs:master on Jan 5,,
329E6HTMSWQ7NUUWSHECC3IE56R3KD,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:44 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 04:44:41 PST 2016,Tue Nov 08 04:53:43 PST 2016,Tue Nov 15 04:53:43 PST 2016,,,,542,98% (39/40),0% (0/1),0% (0/1),1297,https://github.com/juju/charmstore/pull/503,https://github.com/juju/charmstore/graphs/contributors,jujugui,"jujugui, frankban, rogpeppe",5,16,{},rogpeppe,rogpeppe,"jrwren, axw, jujugui, urosj, alesstimec, frankban, rogpeppe, jujubot","mhilton, fabricematrat","Y,core",":+1:$$$$:+1: This is looking very good, thanks.While I think this PR is fine to land as it is I can't quite shake the feeling that there is something wrong with the semantics. Invalidating perfectly good data because you haven't fetched all of the data that is potentially required seems wrong here. I'll have a think about this.The lack of any performance measurements also worries me, I'm not certain that this is actually achieving much.",N,{},N,{},N,{},3SKEMFQBZ4TVABYWU0E9R4LB93A8KL,TRUE,YY,jujugui merged commit ee6dce1 into juju:v5-unstable on Jan 5,,
3LN3BXKGC0JZC601CA4ZJ81IWI4WG9,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:50 PDT 2016,,,AT9K95UXPKH3J,Approved,Tue Oct 25 09:00:04 PDT 2016,Tue Oct 25 09:04:23 PDT 2016,Tue Nov 01 09:04:23 PDT 2016,2016-11-01 16:05:14 UTC,,,259,100% (3/3),100% (3/3),0% (0/0),1312,https://github.com/theonion/django-bulbs/pull/96,https://github.com/theonion/django-bulbs/graphs/contributors,collin,"benghaziboy, csinchok, MichaelButkovic",4,16,{},collin,collin,"benghaziboy, csinchok, MichaelButkovic","mparent61, kand","Y,core|Y,others","benghaziboy  commented on Mar 2  we need a way to silence all these fixtures in PRs, but other than that....:+1: $$$$MichaelButkovic  commented on Mar 2  LGTM",N,{},"Y,bug","MichaelButkovic  commented on Mar 2  actually no lgtm until  re-open bengazi investigation to get to the truth  is finished",N,{},3WQ3B2KGE94C68AHP2S1DRFC4BOB1N,TRUE,YY,"bulbs-poll  #96  Merged  collin  merged 79 commits into master from polls on Mar 7",,
3B623HUYJ4ERCADA97IAU6HZ2MW8SR,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:44 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 05:02:53 PST 2016,Tue Nov 08 05:08:55 PST 2016,Tue Nov 15 05:08:55 PST 2016,,,,362,98% (39/40),0% (0/1),0% (0/1),1315,https://github.com/OpenRCT2/OpenRCT2/pull/2616,https://github.com/OpenRCT2/OpenRCT2/graphs/contributors,IntelOrca,"IntelOrca, duncanspumpkin, marijnvdwerf",6,17,{},atmaxinger,atmaxinger,"Gymnasiast, adrian17, IntelOrca, AaronVanGeffen, marijnvdwerf, janisozaur, zsilencer, duncanspumpkin, trigger-death","Broxzier, atmaxinger","Y,core","Only minor comments now, mostly w.r.t. signedness of variables.Otherwise :+1: from me.$$$$I'm happy with the code, though personally I'd ask you to squash the history so it's a bit cleaner.",N,{},"Y,improve","Without any file management, this change would make the amount of saves pile up really quickly. Maybe you can prepend a sequence number to the date so you can retain a certain (configurable) amount of autosaves?$$$$I don't think this warrants an option. Just keep the last ten files and use timestamps.$$$$Technically this should work, but I have some comments.We already have some time-related code in platform/, although it's using gmtime rather than localtime, like you do, which perhaps makes more sense. Originally I remember doing that because Windows already had time implemented using its WinApi functions, but seeing that this not limited to POSIX, perhaps we should switch all of platform to time.h? @IntelOrca what's your stance on that?I don't like the name of the function, especially with the kind of parameter it receives. When I first looked at it, I thought the parameter to delete_old_autosaves is a count of how many saves to remove. Can you come up with a better name? Something like limit_save_count. Again @IntelOrca any comments?One thing that is overlooked entirely, I think, is that with autosaves you generally have them in some order, and when limiting their amount, the user would like to get rid of the oldest first. I believe the platform file enumeration gives no guarantees on the order the files are enumerated in, but it rather depends on filesystem. That said, we can end up deleting most recent save every time we call this function and retaining old and long forgotten saves, which in my opinion renders the whole autosave functionality useless.",N,{},3MB8LZR5BGHQPIIFOPNDW97HT4RKL3,TRUE,YY,IntelOrca merged commit 015c760 into OpenRCT2:develop on Jan 4,,
3I4E7AFQ2KNHBRM8PBKRT1MZKG3TJK,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:40 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 09:00:16 PST 2016,Wed Nov 09 09:06:58 PST 2016,Wed Nov 16 09:06:58 PST 2016,,,,402,98% (39/40),0% (0/1),0% (0/1),1317,https://github.com/apache/spark/pull/10570,https://github.com/apache/spark/graphs/contributors,asfgit,"mateiz, rxin, pwendell",4,17,{},srowen,srowen,"ankurdav, mateiz, rxin, pwendell, JoshRosen, tdas, ankurdave, srowen, marmbrus, ScrapCodes, aarondav, andrewor14, kayousterhout, jegonzal,  holdenk, markhamstra, mengxr, jkbradley",thunterdb,"Y,others",@srowen thanks a lot for the cleanup! Just two comments.,"Y,others","cc @jkbradley@srowen I have some concerns about the number of files being touched by this PR, it may be hard to merge without an ever-present conflict somewhere. Maybe splitting it will go faster?",N,{},N,{},3LRLIPTPERX9TZRBRYYNNVR60KSKA6,FALSE,NY,Merged to master,,
3OQQD2WO8IUGHZ48SET0ZN31D223I2,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Wed Nov 16 11:57:14 PST 2016,,,A2958TQAW43MP6,Approved,Thu Nov 03 10:19:47 PDT 2016,Thu Nov 03 10:24:26 PDT 2016,Thu Nov 10 09:24:26 PST 2016,2016-11-10 17:24:29 UTC,,,279,100% (12/12),100% (12/12),100% (11/11),1318,https://github.com/excilys/androidannotations/pull/1673,https://github.com/excilys/androidannotations/graphs/contributors,WonderCsabo,"pyricau, WonderCsabo, yDelouis",3,17,{},shiraji,shiraji,"pyricau, WonderCsabo, yDelouis","dodgex,","Y,core","That's good idea, @WonderCsabo . I used your idea to change the code so that now AfterViewsHandler triggers to generate OnFinishInflate","Y,others",i think the generation of this code should be triggered by AfterViewsHandler (and View(s)ByIdHandler if necessary?) as soon as it is required.,"Y,bug|Y,inconsistency","I do not think this is a good approach. It is not enough to check if the current class has @AfterViews in i, for example there can be @AfterViews in the superclass.","Y,others",Is init_() empty method if there is no @AfterViews?,3MTMREQS4W60OZLSGCHQB6L0KA5AWT,FALSE,NN,WonderCsabo closed this on Jul 17,,
306996CF6W8AKOCNZ0N0P7KRKS41BZ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:28 PST 2016,,,A2958TQAW43MP6,Approved,Fri Nov 04 08:46:03 PDT 2016,Fri Nov 04 08:56:32 PDT 2016,Fri Nov 11 07:56:32 PST 2016,2016-11-11 15:57:29 UTC,,,629,100% (12/12),100% (12/12),100% (11/11),1319,https://github.com/neos/neos-development-collection/pull/323,https://github.com/neos/neos-development-collection/graphs/contributors,aertmann,"aertmann, kdambekalns, kitsunet",4,17,{},dfeyer,dfeyer,"aertmann, kdambekalns, kitsunet, hlubek","gerhard-boden, aertmann, gerhard-boden","Y,others","Hey @dfeyer looks pretty decent$$$$Very nice, thanks! I will hopefully find the time to do some testing this weekend.$$$$Just did some testing works great! :+1:","Y,core",Depends on neos/flow-development-collection#195,"Y,improve|Y,inconsistency","@gerhard-boden No, 404 means the page isn't there‰ÛÒand probably never was. A 410 on the other hand clearly states that what used to exist is now gone. Big difference.",N,{},3YW4XOSQKR9R27JNPT9WIH70WDTU1M,TRUE,YY,aertmann merged commit 0a48355 into neos:master on Apr 27,,
37VUR2VJ6ADTUT4TD0JV0RQ92D41C6,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:50 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 23:37:33 PDT 2016,Tue Oct 25 23:45:25 PDT 2016,Tue Nov 01 23:45:25 PDT 2016,Tue Nov 01 17:51:51 PDT 2016,,,472,100% (9/9),100% (9/9),0% (0/0),1320,https://github.com/kubernetes/kubernetes/pull/19267,https://github.com/kubernetes/kubernetes/graphs/contributors,k8s-merge-robot,"k8s-merge-robot, brendandburns, lavalamp",4,17,{},caesarxuchao,caesarxuchao,"k8s-merge-robot, brendandburns, lavalamp, caesarxuchao, justinsb, derekwaynecarr, mikedanese",k8s-teamcity-mesosphere,N,{},"Y,core",shouldnt the default value include extensions/v1beta1 instead of just extensions?,"Y,improve","I dont see the code that calls main with test=true.Will this be auto-updated anytime someone updates the generator code?","Y, no value","Can you please explain a bit more?$$$$Whats wrong if GenerateType is called twice?$$$$Why test_release_1_1? Do you plan to rename this to release_1_1 later?$$$$How will GenerateType() be called multiple times in the same run?",3SNLUL3WO5B4SENRI3RF2WGER6DULE,TRUE,YY,k8s-merge-robot merged commit 6d36748 into kubernetes:master on 13 Jan,,
33N1S8XHHM962MF35E33BPRUBVPZ12,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:50 PDT 2016,,,A38NFX88VZDMJ3,Approved,Tue Oct 25 18:34:51 PDT 2016,Tue Oct 25 18:47:07 PDT 2016,Tue Nov 01 18:47:07 PDT 2016,Tue Nov 01 17:51:50 PDT 2016,,,736,100% (7/7),100% (7/7),0% (0/0),1331,https://github.com/FriendsOfSymfony/FOSRestBundle/pull/1299,https://github.com/FriendsOfSymfony/FOSRestBundle/graphs/contributors,lsmith77,"lsmith77, Ener-Getick, xabbuh",4,18,{},Ma27,Ma27,"lsmith77, Ener-Getick, xabbuh, everzet",SofHad,"Y,core",Otherwise seems good to me,"Y,core",Wouldn't it be possible to do this in the 1.8 release?,"Y,improve",please change this to int|null.,N,{},3Z2R0DQ0JI2H2W4XIXU5JIV2ZHBE29,TRUE,YY,lsmith77 merged commit 0b6989a into FriendsOfSymfony:master on Jan 12,,
385MDVINFC3938Q2KGP2GLTYOALWJD,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:50 PDT 2016,,,AT9K95UXPKH3J,Approved,Tue Oct 25 04:08:36 PDT 2016,Tue Oct 25 04:14:27 PDT 2016,Tue Nov 01 04:14:27 PDT 2016,2016-11-01 11:14:30 UTC,,,351,100% (3/3),100% (3/3),0% (0/0),1337,https://github.com/Z3Prover/z3/pull/401,https://github.com/Z3Prover/z3/graphs/contributors,wintersteiger,"NikolajBjorner, wintersteiger, leodemoura",4,18,{},cheshire,https://github.com/wintersteiger,"NikolajBjorner, wintersteiger, leodemoura",https://github.com/cheshire,"Y,core","Alright, I've added a bunch of comments to the commits, would be nice if you could take a look at those. It might make sense to split this PR into two, separating the purly syntactic changes from the others. Then we can at least merge all those annotations (do they have any consequences at all?), curly braces and indentation fixes right away.",N,{},N,{},N,{},30LB5CDZNDY8HHSFZX44L435QJZ0Z4,TRUE,YY,"No, you should have filled in the documentation instead of removing the macros. At the time you had your cursor on them it would have been zero effort. Now someone else (probably myself) has to go and figure out what's missing. So, yes, OK to merge. I expect Java 1.6 was not tested, so if there are any users of that era left, we may get complaints about those equality functions after merging this.",,
34HEO7RUG6ITUJ6CRG2J0NIY68DAR9,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:46 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 04:43:04 PST 2016,Mon Nov 07 05:12:14 PST 2016,Mon Nov 14 05:12:14 PST 2016,,,,1750,98% (39/40),0% (0/1),0% (0/1),1338,https://github.com/rust-lang/rust/pull/30740,https://github.com/rust-lang/rust/graphs/contributors,bors,"bors, brson, alexcrichton",7,18,{},bluss,bluss,"lkuper, thestinger, alexcrichton, erickt, jbclements, bors, pnkfelix, bblum, steveklabnik, nikomatsakis, graydon, catamorphism, eddyb, pcwalton, petrochenkov, brson, eholk","rust-highfive, shepmaster, Grankro, dotdash, ranma42","Y,others","Wow, awesome stuff!$$$$As a bit of ""real world"" performance information, I pulled this down and used it for SXD.Parsing a 16M XML fileValgrind reported that str::from_utf8 took this much of the total run time:Rust 1.5	This PR5.47%	0.29%And I measured a ~1.25% overall speedup in the program.Parsing a 111M XML fileRust 1.5	This PR4.12%	0.22%And I measured a ~1.1% overall speedup in the program.Thanks for the awesome performance gains!$$$$Thanks a lot @shepmaster! Always encouraging to get that kind of feedback! :heart_eyes_cat: And thanks to @bluss for getting this started, I've been completely blind to the masking quick check when I initially looked into this a few weeks ago! :beers:","Y,core",Sweet wins. r=me but please do extract 2 to a more descriptive constant.,N,{},N,{},3FTF2T8WLS6MJGBNO63QFBAGFQLW9V,TRUE,YY,bors added a commit that referenced this pull request on Jan 16,,
32CXT5U14GR7RN5EYCDA97ZNNJH8U7,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:51 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 02:25:50 PDT 2016,Tue Oct 25 02:42:02 PDT 2016,Tue Nov 01 02:42:02 PDT 2016,2016-11-01 09:42:14 UTC,,,972,100% (9/9),100% (9/9),0% (0/0),1342,https://github.com/akka/akka/pull/19384,https://github.com/akka/akka/graphs/contributors,rkuhn,"viktorklang, patriknw, rkuhn",6,18,{},johanandren,johanandren,"viktorklang, patriknw, rkuhn, jboner, pvlugter","ktoso, patriknw",N,{},"Y,others","Another possibility would be to use Duration.Undefined.$$$$I was just talking about the internal representation, reconnectTimeout.isDefined would then be reconnectTimeout.isFinite instead, but this is not an important point","Y,improve","Thought about it for a bit, I like that it is clear that it is disabled rather than not defined - there is no timeout. If you feel it is important I'll change it.",N,{},32SVAV9L3GX3X1J46S6O69A3KA23AR,TRUE,YY,rkuhn merged commit ca84664 into master on 11 Jan,,
38RHULDV9Y3D8X6W2Y424KEYBVWWI1,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:44 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 06:05:01 PST 2016,Wed Nov 09 06:13:33 PST 2016,Wed Nov 16 06:13:33 PST 2016,,,,512,98% (39/40),0% (0/1),0% (0/1),1344,https://github.com/caciviclab/disclosure-backend/pull/124,https://github.com/caciviclab/disclosure-backend/graphs/contributors,bcipolli,"palewire, bcipolli, aboutaaron",3,18,{},bcipolli,bcipolli,"tdooner, aboutaaron, mikeubell, palewire, armendariz, bcipolli, adborden",{},"Y,core","Great, looking better!$$$$This looks like a good approach in general, and I think breaking out utility methods like all the parse_ methods will make it pretty easy to audit and test the logic we apply to import the data.I didn't see any logic to handle amendments, I suppose that can come later if we need it.:+1:",N,{},N,{},N,{},3DR23U6WE62BMVYA1CE1K54T499TE2,TRUE,YY,bcipolli merged commit d4188c5 into caciviclab:master on Jan 16,,
371DNNCG44QSRAQPY7N04BDL45A8TG,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:45 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 05:21:54 PST 2016,Mon Nov 07 05:33:23 PST 2016,Mon Nov 14 05:33:23 PST 2016,,,,689,98% (39/40),0% (0/1),0% (0/1),1345,https://github.com/facebook/react/pull/5811,https://github.com/facebook/react/graphs/contributors,zpao,"zpao, spicyj, jimfb",5,18,{},jontewks,jontewks,"fisherwebdev, acdlite, gaearon, subtleGradient, jimfb, syranide, jordwalke, vjeux, hellendag, keyanzhang, zpao, mcsheffrey, yungsters, cpojer, bgw, sebmarkbage, petehunt, benjamn, spicyj, chenglou","facebook-github-bot, rickbeerendonk","Y,core","Looks great, thanks @jontewks!","Y,core","@zpao just updated shallowEqual internally to use an Object.is polyfill which we should sync out soon.Also why not use just x !== x to check if x is NaN?",N,{},N,{},31EUONYN2WRCBEFO0LHCQZMR3GTVOM,TRUE,YY,zpao merged commit 31d3bfa into facebook:master on Jan 19,,
3R5OYNIC2CXDX2P6KOPBQX8BTF9TPK,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:31 PST 2016,,,A2958TQAW43MP6,Approved,Tue Nov 01 23:50:30 PDT 2016,Wed Nov 02 00:03:23 PDT 2016,Tue Nov 08 23:03:23 PST 2016,2016-11-09 07:03:38 UTC,,,773,100% (12/12),100% (12/12),100% (11/11),1351,https://github.com/ethereum/go-ethereum/pull/2116,https://github.com/ethereum/go-ethereum/graphs/contributors,obscuren,"obscuren, fjl, karalabe",6,18,{},obscuren,obscuren,"obscuren, fjl, karalabe, zelig, maran, wanderer, zsfelfoldi, SilentCicero, #19ethers","robotally, codecov-io, Gustav-Simonsson,  tgerring","Y,others","Vote 	Count 	Reviewers:+1: 	2 	@Gustav-Simonsson @karalabe$$$$@obscuren refactoring commit sounds good but agree to add it after homestead release.","Y,others","@obscuren agreed, this is a potential DoS vector. CALLER is meant to be a single lookup, and MAX_CALLDEPTH - 1 calls to caller.Caller() is too expensive for the Gbase (2) gas cost.Should be fine to cache the caller here, it'll cost a max of 1024 * 20 bytes which isn't too bad compared to what would already be used by all the recursive exec envs. We could consider bumping gas cost of DELEGATECALL slightly to account for this.","Y,bug",This is wrong actually. I'm modifying the code so that this isn't ignored in the EVM. I'm not sure why this was done in the first place.,"Y, no value",@tgerring I disagree. For testing we can already change this by modifying the params.HomesteadBlock. For anything that isn't the main net or test net we should probably set the block to 0 to always use the new rules. It's a bit useless to use frontier rules imo. Is there a use case where you believe this is a requirement?,3WEV0KO0ONG5FP7VGHYR4IQLZJUDS9,TRUE,YY,obscuren merged commit f8d98f7 into ethereum:develop on 19 Feb,,
3QHITW7OYOXTIIRCE1DJVX8TAMBAQ8,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:45 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 04:58:16 PST 2016,Tue Nov 08 05:02:35 PST 2016,Tue Nov 15 05:02:35 PST 2016,,,,259,98% (39/40),0% (0/1),0% (0/1),1352,https://github.com/ipython/ipywidgets/pull/312,https://github.com/ipython/ipywidgets/graphs/contributors,jdfreder,"jdfreder, SylvainCorlay, minrk",4,18,{},SylvainCorlay,SylvainCorlay,"willingc, takluyver, ssunkara1, rgbkrk, jasongrout, gnestor, Carreau, minrk, jdfreder, SylvainCorlay, ivanov, ellisonbg, grelston, fperez, jhpedemonte",blink1073,"Y,core",Thanks ! Hopefully this makes things a little less painful for people who want to embed prior to ipywidgets 6.0,"Y,others","@SylvainCorlay, I think you need to use externals for those other modules: https://webpack.github.io/docs/library-and-externals.html",N,{},N,{},3TXD01ZLD558U6G6CBSYGFE498PU4A,TRUE,YY,jdfreder merged commit f368f96 into ipython:master on Jan 15,,
37SOB9Z0SSLI70CEDHQDR3VTU6W3LG,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:46 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 07:13:33 PST 2016,Mon Nov 07 07:28:21 PST 2016,Mon Nov 14 07:28:21 PST 2016,,,,888,98% (39/40),0% (0/1),0% (0/1),1353,https://github.com/gtk-rs/gtk/pull/218,https://github.com/gtk-rs/gtk/graphs/contributors,GuillaumeGomez,"GuillaumeGomez, gkoz, jeremyletang",3,19,{},rnestler,rnestler,"GuillaumeGomez, gkoz, jeremyletang",rnestler,"Y,core","Thanks! Once we confirmed my note, I'll merge.$$$$Looks good :+1:$$$$Thanks a lot for your contribution @rnestler! I merge.",N,{},N,{},N,{},3S96KQ6I9NS6UPKA5H3HENM72KYTD5,TRUE,YY,GuillaumeGomez merged commit e067474 into gtk-rs:master on Jan 3,,
3P4ZBJFX2VRTY6461QYH1N16V34WFA,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:49 PDT 2016,,,A38NFX88VZDMJ3,Approved,Tue Oct 25 19:19:14 PDT 2016,Tue Oct 25 19:31:31 PDT 2016,Tue Nov 01 19:31:31 PDT 2016,Tue Nov 01 17:51:54 PDT 2016,,,737,100% (7/7),100% (7/7),0% (0/0),1359,https://github.com/apache/spark/pull/10610,https://github.com/apache/spark/graphs/contributors,asfgit,"mateiz, rxin, pwendell",5,19,{},BryanCutler,BryanCutler,"mateiz, rxin, pwendell, JoshRosen","SparkQA, thunterdb","Y,others","This patch passes all tests.This patch merges cleanly.This patch adds no public classes.@BryanCutler it looks great, thanks!",N,{},"Y,improve","One overall comment about the seeds: it is unclear what None means, and it has a different behavior between spark.ml and spark.mllib.",N,{},3DR23U6WE62BMVYA1CE1K54SZURTEJ,FALSE,NY,LGTM. Merged into master. Thanks!,,
3Q2T3FD0ONW2DIUZDTRSRGAIUBM3MI,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:46 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 05:54:51 PST 2016,Tue Nov 08 06:00:12 PST 2016,Tue Nov 15 06:00:12 PST 2016,,,,321,98% (39/40),0% (0/1),0% (0/1),1360,https://github.com/kubernetes/kubernetes/pull/19337,https://github.com/kubernetes/kubernetes/graphs/contributors,k8s-merge-robot,"k8s-merge-robot, brendandburns, lavalamp",3,19,{},danielschonfeld,danielschonfeld,"thockin, justinsb, bprashanth, zmerlynn, smarterclayton, vmarmol, wojtek-t, lavalamp, erictune, eparis, k8s-merge-robot, piosz, jlowdermilk, satnam6502, saad-ali, dchen1107, deads2k, roberthbailey, vishh, jbeda, bgrant0607, caesarxuchao, yujuhong, mikedanese, nikhiljindal, gmarek, a-robinson, sttts, brendandburns, derekwaynecarr","danielschonfeld, k8s-bot, k8s-teamcity-mesosphere, googlebot","Y,core","Sorry - more comments! But this is good stuff.A few edge cases that I think we need to fix or document that they don't really happen, but I think this is close.$$$$Looks great - I will LGTM when the tests pass!",N,{},N,{},N,{},3HYA4D452S798A4TD8EB10G3FA62FL,TRUE,YY,k8s-merge-robot merged commit e0e305c into kubernetes:master on Jan 8,,
3HY86PZXPY68RRO79RPQQFQCNPH1EZ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:47 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Thu Nov 10 03:44:22 PST 2016,Thu Nov 10 04:01:09 PST 2016,Thu Nov 17 04:01:09 PST 2016,,,,1007,98% (39/40),0% (0/1),0% (0/1),1362,https://github.com/networkx/networkx/pull/1915,https://github.com/networkx/networkx/graphs/contributors,chebee7i,"hagberg, dschult, chebee7i",4,19,{},nishnik,nishnik,"SanketDG, jfinkels, Scinawa, k-karakatsanis, hagberg, jtorrents, ysitu, loicseguin, dschult, thegreathippo, chebee7i, thenovices",OrkoHunter,"Y,core",Thanks for the contribution @nishnik!,N,{},N,{},N,{},31QTRG6Q2U1B08MUKWHBMYVCXRUPYR,TRUE,YY,chebee7i merged commit d0e4b1a into networkx:master on Jul 27,,
3DW3BNF1GH6742UE32NF5T161QQ8VW,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:47 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 04:19:45 PST 2016,Mon Nov 07 04:50:51 PST 2016,Mon Nov 14 04:50:51 PST 2016,,,,1866,98% (39/40),0% (0/1),0% (0/1),1365,https://github.com/openshift/origin/pull/6596,https://github.com/openshift/origin/graphs/contributors,openshift-bot,"openshift-bot, smarterclayton, deads2k",3,19,{},jwforres,jwforres,"ncdc, danwinship, bparees, deads2k, openshift-bot, rajatchopra, jwforres, smarterclayton, pravisankar, danmcp, dcbw, mfojtik, liggitt",openshift-bot,"Y,core","$$$$nits, LGTM otherwise$$$$nit on ""useRedirectHandler"" param name, LGTM otherwise$$$$",N,{},N,{},N,{},3634BBTX0PIDJVIV2BZ3OGNJ3DCIFW,TRUE,YY,"@openshift-bot openshift-bot merged commit e9f3b32 into openshift:master on Jan 30$$$$LGTM, [merge]",,
38VTL6WC4A15LE6HAF3W08V9HHR5Y0,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:41 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 08:49:47 PST 2016,Mon Nov 07 08:58:23 PST 2016,Mon Nov 14 08:58:23 PST 2016,,,,516,98% (39/40),0% (0/1),0% (0/1),1366,https://github.com/javiereguiluz/EasyAdminBundle/pull/784,https://github.com/javiereguiluz/EasyAdminBundle/graphs/contributors,javiereguiluz,"javiereguiluz, ogizanagi",5,19,{},javiereguiluz,javiereguiluz,"thomasbeaujean, maldoinc, javiereguiluz","reypm, Pierstoval, rubengc, ogizanagi","Y,others",":+1: yes for me this will work and covers almost everything I could do with a menu. If this is will be implemented soon I am very graceful since this is a missing part of this amazing bundle which day by day is more likely Admin Generator from Symfony1 but with goodness from Symfony2|3And for the second I haven't experience so I can't help there I just get sticky to the rules by the masters behind the Bundle :smiley:$$$$I'm fine with the removal of the link level from my suggestion. It indeed makes sense, as even the label and icon options can be considered kind of as part of the link generation. So having it at the same level isn't a problem. What I wanted to avoid is only the type option :smiley::+1: about priority (but I'll remove the action based configuration to only keep route and url).About the params option, I don't think we have a lot of solutions. And having it in a dedicated config option is the most flexible.$$$$@javiereguiluz this sounds awesome and I think this config can resolve any needI love this feature$$$$Yeah :+1: for AdminLTE I mention here time ago about how to use and/or integrate and @javiereguiluz tell me wasn't necessary since EasyAdmin have it's own theme but I am in favor of change to AdminLTE a huge step though$$$$@javiereguiluz : I didn't have fully reviewed it yet, but it looks great. Awesome work ! :clap: About empty elements, why not renaming it to divider elements as you mentioned it ?Also I'd suggest that a divider with an empty label generate an simple line divider.","Y,others","Instead of having different menus, do you think it's feasible to implement the push-menu thing as in LTE and other popular themes ? http://www.jasny.net/bootstrap/examples/navmenu-push/I'm not against replacing our current theme by LTE if you think it makes sense, though.","Y,inconsistency","@ogizanagi about menu dividers, I prefer to not do these changes. First, to not complicate things more. Second, because AdminLTE doesn't support these ""line dividers"" yet. We can always implement this in the future.",N,{},3K4J6M3CXFH4RDVS17D8P3ZCRODAGX,FALSE,NN,javiereguiluz closed this in 6dfe83f on Jan 17,,
3OEWW2KGQJZOVDH8JYCHWTLZGOPODF,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:41 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 05:46:55 PST 2016,Tue Nov 08 05:54:47 PST 2016,Tue Nov 15 05:54:47 PST 2016,,,,472,98% (39/40),0% (0/1),0% (0/1),1368,https://github.com/balloob/home-assistant/pull/871,https://github.com/balloob/home-assistant/graphs/contributors,balloob,"balloob, fabaff, pavoni",5,19,{},rmkraus,rmkraus,"•À_•À_•À_•À_rmkraus, jamespcole, rhooper, pavoni, happyleavesaoc, andythigpen, Danielhiversen, philipbl, turbokongen, persandstrom, balloob, robbiet480, MartinHjelmare, kk7ds, jaharkes, fabaff, sfam, theolind, pvizeli, molobrakos, w1ll1am23, tomduijf","maddox, anthonykeane, Bart274","Y,others","I read what this new component can DO, but could you provide a real world example of what it does and what it solved? I'm super interested.Thanks!$$$$That would be a nice addition! :)",N,{},N,{},N,{},3NOKK93PR2W9XCGDBHP6LJ4S0C4EE4,FALSE,NY,Merged! a0ddda4,,
39WICJI5ATG2CPTISIHMZI6R9F3Z3U,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:47 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 05:45:12 PST 2016,Wed Nov 09 05:51:29 PST 2016,Wed Nov 16 05:51:29 PST 2016,,,,377,98% (39/40),0% (0/1),0% (0/1),1371,https://github.com/mozilla/mozillians/pull/1288,https://github.com/mozilla/mozillians/graphs/contributors,johngian,"glogiotatidis, johngian, Sancus",3,19,{},johngian,johngian,"Sancus, johngian, ozten, tallowen, comzeradd, readevalprint, hoosteeno, davedash, tofumatt, aakashhdesai, alexgibson, dpoirier, akatsoulas, glogiotatidisSancus, johngian, ozten, tallowen, comzeradd, readevalprint, hoosteeno, davedash, tofumatt, aakashhdesai, alexgibson, dpoirier, akatsoulas, glogiotatidis",safwanrahman,N,{},"Y,core","Have you considered using deinit to remove the submodules?$$$$Also I would keep one file for the requirements and maybe one for dev purposes. I believe we can remove the compiled.txt.",N,{},N,{},3OCHAWUVGP8LPCZ428Q1732411UXK8,TRUE,YY,johngian merged commit 23ff2eb into mozilla:master on Jan 25,,
37SDSEDIN9QRIQEGWO3QY5UQCMJ180,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:42 PST 2016,,,AC4COL5N5DF9J,Submitted,Mon Nov 07 17:03:56 PST 2016,Mon Nov 07 17:09:08 PST 2016,Mon Nov 14 17:09:08 PST 2016,,,,312,0% (0/0),0% (0/0),0% (0/0),1374,https://github.com/apache/spark/pull/10562,https://github.com/apache/spark/graphs/contributors,asfgit,"mateiz, rxin, pwendell",5,20,{},QiangCai,QiangCai,"mateiz, rxin, pwendell, srowen",SparkQA,N,{},N,{},N,{},N,{},3GFK2QRXXA53IT9BLGQ93V5FU4UW5J,FALSE,NN,@asfgit asfgit closed this in 5d871ea on 6 Jan,,
3QMELQS6Y5ZS7HU913L7KIGCAPMR6Z,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:42 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 10:32:02 PST 2016,Mon Nov 07 10:41:30 PST 2016,Mon Nov 14 10:41:30 PST 2016,,,,568,98% (39/40),0% (0/1),0% (0/1),1377,https://github.com/cdi-spec/cdi/pull/270,https://github.com/cdi-spec/cdi/graphs/contributors,antoinesd,"pmuir, antoinesd",4,20,{},antoinesd,antoinesd,antoinesd,"tremes, mkouba, manovotn, johnament, mp911de",N,{},"Y,others","One more thing regarding reusability.You removed methods which return raw type from Builders.java.But the very same issue remains in BuildersProvider.java. Shouldn't we remove those as well?","Y,bug|Y,improve|Y,inconsistency","I think the name of the method javax.enterprise.inject.spi.builder.Builders#annotatedType() could be confusing. It's true that annotatedTypeBuilder is longer but perhaps little bit more clear?$$$$@antoinesd Although I quite like the idea of configurators there's one major issue with usability - once you invoke a configurator method on a builder instance you will not be able to call build() method anymore because you will get a configurator type. You would have to cast the result:((AnnotatedTypeBuilder)Builders.annotatedType().removeFromType(Foo.class)).build()Or am I missing something?Also I'm not so sure we will be always able to initialize all builders outside of container lifecycle event notifications. Let me check again...$$$Looking at the PR, there is one thing I wonder about. Given the following sample:public <T> void doStuff(@Observes ProcessAnnotatedType event) {        event.setAnnotatedType().addToMethod(method, annotation).addToType(someAnnotation);  // +more setup         event.setAnnotatedType().addToMethod(anotherMethod, anotherAnnotation).addToType(someDifferentAnnotation); // invoke again with different values    }My questions are:You cannot call build() here and from the PR I understood it should be built once the observer method invocation is over. Is that correct? E.g. you needn't invoke it yourself.If so, what happens if you call the Configurator (in this code sample it is AnnotatedTypeConfigurator) twice within the method? Does it apply the latter one? Both?EDIT: Closely related to what I said above is that we should clarify what non-reusable configurator exactly stands for. So that it eliminated bad/weird usage (as the one I showed in the code; at least to me it seems weird, yet momentarily undefined).$$$$@antoinesd While writing new assertions in TCK I realized that InjectionPointConfigurator provides methods for handling stereotypes. It doesn't make sense.$$$$This is IMHO wrong. It should be AnnotatedConstructor<? super T> constructor as well.$$$$I don't think these read methods make sense. The configurator should be always initialized with some AT (i.e. the class structure must be set) and then users should only be allowed to modify annotations. Maybe I'm wrong but I don't understand the purpose of these methods. Also BeforeBeanDiscovery.addAnnotatedType(String) should have a param (Class/AT) the configurator could be initialized from. Otherwise users could try to use .addAnnotatedType(String).removeFromAll() -> BANG!",N,{},351SEKWQS152HUUQWK25S9RF8D4MD1,FALSE,NN,This PR became too complicated (in its history). Code will be proposed again in a new PR soon,,
3QGTX7BCHPQ5Q4GM615FEF4BNBV5ZR,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:49 PDT 2016,,,A38NFX88VZDMJ3,Approved,Tue Oct 25 18:57:40 PDT 2016,Tue Oct 25 19:09:53 PDT 2016,Tue Nov 01 19:09:53 PDT 2016,Tue Nov 01 17:51:55 PDT 2016,,,733,100% (7/7),100% (7/7),0% (0/0),1378,https://github.com/apache/spark/pull/10609,https://github.com/apache/spark/graphs/contributors,asfgit,"mateiz, rxin, pwendell",3,20,{},zsxwing,zsxwing,"mateiz, rxin, pwendell, JoshRosen",SparkQA,"Y,core","This patch merges cleanly.This patch passes all tests.Good idea.",N,{},"Y,bug","This patch fails Spark unit tests.This patch fails MiMa tests.",N,{},3LO69W1SU41LNWMWYY2YYHFNIXJGLJ,FALSE,NN,zsxwing referenced this pull request on Jan 7... Closed,,
3RTFSSG7T8UFYYE2N11FW06QSZQWLF,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:36 PST 2016,,,A2958TQAW43MP6,Approved,Fri Nov 04 08:01:58 PDT 2016,Fri Nov 04 08:38:30 PDT 2016,Fri Nov 11 07:38:30 PST 2016,2016-11-11 15:38:31 UTC,,,2192,100% (12/12),100% (12/12),100% (11/11),1379,https://github.com/dokku/dokku/pull/1836,https://github.com/dokku/dokku/graphs/contributors,michaelshobbs,"josegonzalez, michaelshobbs, progrium",3,20,{},michaelshobbs,michaelshobbs,"josegonzalez, michaelshobbs, progrium, alessio, plietar",{},N,{},"Y,core","This should really be cleaned up imo. port and then ip? ew$$$$The pre-deploy hook is:plugn trigger pre-deploy $APP $IMAGE_TAG",N,{},"Y,others",Should we support scripts.postdeploy as well?,3IOEN3P9S8760WTMTBBT2BTKTRY61J,TRUE,YY,michaelshobbs merged commit a9de299 into master on Feb 20,,
3KI0JD2ZU16IPYAUSPN1F1PC9DT67G,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:51 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 08:37:31 PDT 2016,Tue Oct 25 08:51:08 PDT 2016,Tue Nov 01 08:51:08 PDT 2016,2016-11-01 15:51:14 UTC,,,817,100% (9/9),100% (9/9),0% (0/0),1383,https://github.com/edx/edx-platform/pull/11166,https://github.com/edx/edx-platform/graphs/contributors,pdpinch,"cpennington, cahrens, chrisndodge",5,20,{},giocalitri,giocalitri,"cpennington, cahrens, chrisndodge","edx-webhook, giocalitri, nedbat","Y,core","Great refactoring - thanks!$$$$Nice work, @giocalitri - :+1: once squashed and tests pass.","Y,core","+from student.roles import CourseCcxCoachRole+from student.tests.factories import (+    AdminFactory,+)+from xmodule.modulestore.django import modulestore+from xmodule.modulestore.tests.django_utils import (+    SharedModuleStoreTestCase,+    TEST_DATA_SPLIT_MODULESTORE+)+from xmodule.modulestore.tests.factories import (+    CourseFactory,+    ItemFactory,+)+++class CcxTestCase(SharedModuleStoreTestCase):","Y,bug","The bot still does not recognize me in the AUTHORS file.$$$$If is_ccx is True here, won't error_code be undefined?","Y,others","@giocalitri can you rebase this?$$$$If is_ccx is True here, won't error_code be undefined?$$$$If this block throws an unhandled exception, then no response will be sent to the client? Or does DRF send over a 500 error automatically? Whichever it is, is it the desired error behavior?",3K2755HG5TRWBK29AXYSXJ7686IFDY,TRUE,YY,giocalitri deleted the mitocw:gdm_feature_ccx_actual_apis_#119 branch on Jan 28,,
31GECDVA9JAZLYWP9FI99NPGE2966H,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:36 PST 2016,,,A2958TQAW43MP6,Approved,Fri Nov 04 09:06:40 PDT 2016,Fri Nov 04 09:15:11 PDT 2016,Fri Nov 11 08:15:11 PST 2016,2016-11-11 16:15:30 UTC,,,511,100% (12/12),100% (12/12),100% (11/11),1384,https://github.com/NLog/NLog/pull/1143,https://github.com/NLog/NLog/graphs/contributors,304NotModified,"jkowalski, 304NotModified, Xharze",3,20,{},304NotModified,304NotModified,"jkowalski, 304NotModified, Xharze, bhaeussermann, kevindaub",codecov-io,N,{},"Y,core","@bhaeussermannI was thinking. This is maybe a breaking change? Before, all exception where vanished with the asynctargetwrapper. This is not the case now with throwExceptions = true.",N,{},"Y, no value|Y,others",@304NotModified I don't see that AsyncTargetWrapper throws an exception on the main thread where it did not do so before. Could you please show me the change that changes this?,3IAS3U3I0G4JVTSD86SFIAPHZY62B0,TRUE,YY,304NotModified merged commit d87bc70 into master on Jan 27,,
3QGTX7BCHPQ5Q4GM615FEF4BNBUZ5K,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:47 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 10:17:32 PST 2016,Mon Nov 07 10:23:18 PST 2016,Mon Nov 14 10:23:18 PST 2016,,,,346,98% (39/40),0% (0/1),0% (0/1),1385,https://github.com/dokku/dokku/pull/1848,https://github.com/dokku/dokku/graphs/contributors,michaelshobbs,"josegonzalez, michaelshobbs, progrium",3,20,{},u2mejc,u2mejc,"u2mejc, asm89, plietar, progrium, josegonzalez, xadh00m, michaelshobbs",{},N,{},"Y,core","Given the choice to use eval, disabling that particular lint check makes sense. However, we want the functions file to be self-sufficient by default. So moving lines 7-9 in the commands file to functions would make that true.Additionally, I think that means you can remove the use of eval and subsequently change the single-quotes to double-quotes. Feel free to correct me if I'm wrong there.$$$$This should take in an APP as $1, and then use that to construct $PHASE_FILE_PATH.$$$$Problem is PHASE_FILE_PATH is used in a for loop that defines phase which is a component of PHASE_FILE_PATH. I think moving towards a more readable version of this plugin would be best.$$$$I think we should bring back get_phase_file_path() and call it thusly:...  for phase in ""${passed_phases[@]}""; do    local phase_file_path=$(get_phase_file_path $phase)...",N,{},N,{},3KKG4CDWKJMAAES3E0X7KJRPV1294A,TRUE,YY,michaelshobbs merged commit bc00acb into dokku:master on Jan 14,,
33K3E8REWWJZ8RZ93HOXTEYRH1Y8XZ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:51 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:48 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 07:39:20 PST 2016,Mon Nov 07 07:47:23 PST 2016,Mon Nov 14 07:47:23 PST 2016,,,,483,98% (39/40),0% (0/1),0% (0/1),1388,https://github.com/TerriaJS/terriajs/pull/1213,https://github.com/TerriaJS/terriajs/graphs/contributors,kring,"kring, RacingTadpole, chloeleichen",3,21,{},AlexGilleran,AlexGilleran,"steve9164, chloeleichen, sppigot, kgrochow, AlexGilleran, stevage, meh9, rdengate, kring, RacingTadpole",{},N,{},"Y,core","There are two deprecation warnings at startup:Use CatalogGroup.getChildForShareKey where possible, this is retained for backwards compatibility with existing share links.dataSetID is deprecated. Please set datasetId instead.If we want to remove these from the public API but we still need to use them internally, create a new private API for our use and make the public one call deprecationWarning before calling the private one.Or maybe these (especially findFirstItemByName) are still useful and we shouldn't deprecate them at all? I previously suggested adding deprecationWarning, but that might have been bad advice. Maybe I should have suggested just toning down the ""this is deprecated"" language in the documentation instead (e.g. Consider using {@link CatalogGroup#getChildForShareKey} where possible as it provides an improved way of finding a catalog member that is resistant to renames.)","Y,bug|Y,improve","It seems in this branch we now only serialize the IDs of catalog items that are opened or enabled? That's not sufficient. We lose the opacity setting on sharing, for example. And some catalog items (e.g. CSV, ABS) have other settings that need to be serialized as well, such as the selected data variable.$$$$Just FYI: the ABS layers are broken in this branch at the moment, but I think merging in master should fix it.$$$$It seems catalog items won't be shared if they're inside groups that are closed. For example:Open Data.gov.au -> Australian Taxation Office.Enable both 2011-2012 and 2012-2013 datasets.Close the Australian Taxation Office group.Click Share and load the URL in a new window.The Now Viewing will be blank.$$$$Sharing is including too much information about custom items. For example:Click Add Data, enter http://geofabric.bom.gov.au/simplefeatures/owsOpen Geofabric 2.1.1 - Web Map Service, Aquifer Contours 2.1Enable AHGFAquiferContourClick ShareThe share link goes on for pages, and copying it makes Chrome noticeably slow on my system. The one on nationalmap.gov.au is (relatively) short in comparison. The problem is that the URL in this branch unnecessarily includes details of all the layers queried from the WMS GetCapabilities",N,{},3GS6S824SRL78IFHPGMVXC50KIMNWB,TRUE,YY,kring merged commit d595b8d into master on Jan 29,,
3RWB1RTQDJBUZIXIHQEGZ1COF2P8PB,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:42 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 06:34:30 PST 2016,Mon Nov 07 06:42:49 PST 2016,Mon Nov 14 06:42:49 PST 2016,,,,499,98% (39/40),0% (0/1),0% (0/1),1391,https://github.com/apache/spark/pull/10607,https://github.com/apache/spark/graphs/contributors,asfgit,"mateiz, rxin, pwendell",4,21,{},sethah,sethah,"mateiz, rxin, pwendell, davies, tdas, JoshRosen, srowen, ScrapCodes, ankurdave, jegonzal, holdenk, markhamstra mateiz, rxin, pwendell, JoshRosen, tdas, ankurdave, srowen, marmbrus, ScrapCodes, aarondav, andrewor14, kayousterhout, jegonzal,  holdenk, markhamstra, mengxr","sethah, MLnick, jkbradley, SparkQA","Y,core|Y,others","I like this approach - and it looks to mirror the approach taken when ALS was ported over (namely their is a train function in the new ALS code marked as a developer API taking the old format of inputs). We could also convert the RDD of LabeledPoints to a DataFrame (which is something I remember being asked to do in one of my previous PRs). @jkbradley & @dbtsai what are your thoughts on this?$$$$@sethah given it's a copy of MLLIb impl, and given test passes and the smaller spark-perf tests, I'm comfortable moving ahead. We should still run the larger scale tests ASAP to check, but I don't think it should be a blocker.$$$$This seems fine for now as it is private. The main idea with this PR will be to start the migration. As part of the remaining steps in SPARK-12326, there should be plenty of opportunity to clean things up.$$$$Thanks for doing this migration. I checked the PR and it LGTMYour tests look good to me. The tests all seem fairly close, except for a couple of outliers, but even those seem within a standard deviation or so (the 2nd value in spark-perf results). Thanks for running them!Also @MLnickAs part of those tickets, I think we can clean up this ML impl and interfaces if required (e.g. we could look at removing theprivate [ml] train method in favour of one in MLLIb that converts RDDs to DataFrame and calls ML, we can make more stuff private where possible, etc). But I think it'll be a lot easier to clean things up once everything is in ML.If the ML implementation uses RDDs underneath, it will be nice to call directly into that implementation from spark.mllib in order to avoid serialization overhead.","Y,others",@sethah I did find the perf-test results very difficult to read. Would it be ok to summarize into a readable table to make it easier to compare the before and after numbers (for posterity)?,N,{},N,{},3K4J6M3CXFH4RDVS17D8P3ZCRNKGA8,FALSE,NY,@sethah merged to master. Ping me when the remaining work on SPARK-12326 is ready for review.,,
3VJ4PFXFJ3VLABYTVAXO5Y5ID7HAUD,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:48 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Thu Nov 10 04:24:43 PST 2016,Thu Nov 10 04:55:18 PST 2016,Thu Nov 17 04:55:18 PST 2016,,,,1835,98% (39/40),0% (0/1),0% (0/1),1392,https://github.com/hpcugent/easybuild-easyconfigs/pull/2267,https://github.com/hpcugent/easybuild-easyconfigs/graphs/contributors,boegel,"boegel, wpoely86, fgeorgatos",3,21,{},nathanhaigh,nathanhaigh,"itkovian, SimonPinches, ocaisa, pescobar, gjbex, JensTimmerman, verdurin, gribozavr, tovrstra, georgets, jas02, RvDijk, stdweird, besserox, npklein, tloizou, hajgato, gppezzi, wpoely86, rjeschmi, boegel, FokkeDijkstra, nathanhaigh, nudded, fgeorgatos, wdpypere",hpcugentbot,N,{},"Y,core","I see that the main fastqc executable is in fact a Perl script. Perl should then be added as a dependency and the shebang line patched.@boegel Is it worth putting in place a unit test to check for shebang lines containing #!/usr/bin/ but not #!/usr/bin/env in sourcecode files? This could catch hidden dependencies and also highlight where patches are likely.","Y,improve","without this, the fastqc -v sanity check command will fail",N,{},3MAOD8E57RYMXIK7ZLIHZVJ8V7CNX2,TRUE,YY,boegel merged commit 799ddb5 into hpcugent:develop on Mar 8,,
307L9TDWJYG8V0FZPU6S4VZIZ1W3NI,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:48 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 06:03:47 PST 2016,Mon Nov 07 06:21:42 PST 2016,Mon Nov 14 06:21:42 PST 2016,,,,1075,98% (39/40),0% (0/1),0% (0/1),1393,https://github.com/servo/servo/pull/9172,https://github.com/servo/servo/graphs/contributors,bors-servo,"Ms2ger, bors-servo, pcwalton",3,21,bosr-servo is a bot,nikkisquared,nikkisquared,"brson, metajack, kmcallister, jgraham, glennw, Manishearth, SimonSapin, jdm, mbrubeck, larsbergstrom, pcwalton, Ms2ger, zmike, mrobinson, saneyuki","nikkisquared, bors-servo, KiChjang, highfive",N,{},N,{},N,{},N,{},3CP1TO84PUPH6DB47W12FOPPPPF527,TRUE,YY,bors-servo merged commit 67f4df5 into servo:master on Jan 8,,
3IZVJEBJ6A8198G0BKFK6LIBJ65Z60,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:52 PDT 2016,,,A1PQ56YTJSJN8B,Approved,Tue Oct 25 10:02:53 PDT 2016,Tue Oct 25 10:10:45 PDT 2016,Tue Nov 01 10:10:45 PDT 2016,2016-11-01 17:11:14 UTC,,,472,100% (1/1),100% (1/1),0% (0/0),1395,https://github.com/Apple/swift/pull/901,https://github.com/Apple/swift/graphs/contributors,gribozavr,"lattner, gribozavr, DougGregor",5,21,{},hpux735,hpux735,"lattner, gribozavr, DougGregor,jckarter,","MacMeDan, modocache, jrose-apple","Y,core|Y,others","Glad I could help$$$$You are my hero$$$$Awesome!!! Thanks so much Dmitri$$$$Thank you for working on the Linux arm port!",N,{},N,{},N,{},3E1QT0TDFQX44G88UXTXEO6XD86I8H,TRUE,YY,The label says merged in corner,,
3P0I4CQYVYVN4JHZ0TH7OHAKN4VWOW,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:48 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 06:41:46 PST 2016,Wed Nov 09 06:51:30 PST 2016,Wed Nov 16 06:51:30 PST 2016,,,,584,98% (39/40),0% (0/1),0% (0/1),1396,https://github.com/PolymerElements/iron-list/pull/168,https://github.com/PolymerElements/iron-list/graphs/contributors,blasten,"blasten, tedium-bot",4,21,{},jshcrowthe,jshcrowthe,"rictic, frankiefu, notwaldorf, cdata, azakus, blasten, kevinpschaaf, garlicnation","jshcrowthe, Westbrook, MeTaNoV, googlebot, guirenard","Y,core|Y,others",":+1:$$$$/sub +1$$$$Thanks!$$$$Great job @jshcrowthe. I updated the demo, but so far this is looking awesome!$$$$thanks @jshcrowthe for your contribution!$$$$oh wow! yes! nice job @jshcrowthe ! :)","Y,others","@jshcrowthe excited to see someone looking at the grid functionality! Took a look at how your update works, and saw one thing I wondered your thoughts on.When positioning horizontally there is a much higher chance of ""requiring"" sub-pixel positioning to be ""correct"" to the layout. However, when you translate3d at that level (i.e. translate3d(100.5px, 0px, 0px)) the element you are positioning acquires a marked blur on its contents. It's a little hard to notice in the demo you've posted, but if you manually edit the sub-pixel out of the transform by comparison it becomes apparent. Here I've done just that to the item on the left:screen shot 2016-04-07 at 10 46 16 amWhat are your thoughts on using Math.floor() on your ""x"" and ""y"" values at line 1240 to prevent that from happening?",N,{},N,{},3P1L2B7AD2D9F93UMHF63QOQE04OLD,TRUE,YY,blasten merged commit 44e3939 into PolymerElements:master on Apr 19,,
3IH9TRB0FBNK7WQT5AFHBUO4FIO1I8,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:42 PST 2016,,,A2958TQAW43MP6,Approved,Fri Nov 04 08:58:09 PDT 2016,Fri Nov 04 09:06:37 PDT 2016,Fri Nov 11 08:06:37 PST 2016,2016-11-11 16:07:29 UTC,,,508,100% (12/12),100% (12/12),100% (11/11),1397,https://github.com/jenkinsci/cloudbees-folder-plugin/pull/32,https://github.com/jenkinsci/cloudbees-folder-plugin/graphs/contributors,oleg-nenashev,"jglick, stephenc",8,21,{},oleg-nenashev,oleg-nenashev,"jglick, stephenc, kohsuke","rsandell, reviewbybees, Vlatombe, jtnord, jenkinsadmin","Y,others",Thank you for this pull request! Please check this document for how the Jenkins project handles pull requests.,"Y,core",Another TC is available here: oleg-nenashev/ownership-plugin@b42f293,N,{},"Y, no value",why is this done on init (called from onLoad()) rather than in readResolve?,35DR22AR5E8FTERXH2Y2QHL1OFRX3C,TRUE,YY,oleg-nenashev merged commit bd37926 into jenkinsci:master on Jun 13,,
3EHVO81VN59KB1F9ZSXWBINPF591HF,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:49 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 05:24:47 PST 2016,Wed Nov 09 05:48:06 PST 2016,Wed Nov 16 05:48:06 PST 2016,,,,1399,98% (39/40),0% (0/1),0% (0/1),1398,https://github.com/owncloud/core/pull/21552,https://github.com/owncloud/core/graphs/contributors,DeepDiver1975,"DeepDiver1975, icewind1991, PVince81",4,21,{},rullzer,rullzer,"samtuke, SergioBertolinSG, butonic, LukasReschke, PVince81, bantu, Xenopathic, rullzer, FlorinPeter, MorrisJobke, schiessle, bartv2, BernhardPosselt, jancborchardt, Kondou-ger, ChristophWurst, tomneedham, eMerzh, VicDeo, tanghus, icewind1991, blizzz, georgehrke, DeepDiver1975, nickvergessen",{},"Y,core",":+1: besides my nitpicks :smile:$$$$nice","Y,core","Will there ever be the need to have multiple providers of the same type?If not we can move this to pure config as we did this with the commants managerhttps://github.com/owncloud/core/blob/master/lib/private/comments/managerfactory.phphttps://github.com/owncloud/core/blob/master/config/config.sample.php#L812Would result in less code - and less to test ....","Y,inconsistency","I don't think we need to support multiple providers for the same share type. I would only allow to register one provider for one share type. Even if, at some point in time, we have two share provider which do some kind of link sharing they should have two different share types. For example ""linkShare"" and ""SuperLinkShareNG"". The share type should the unique identifier which connects a share to a share provider.",N,{},3YW4XOSQKR9R27JNPT9WIH71YCE1UG,TRUE,YY,DeepDiver1975 merged commit 8b346ab into master on Jan 13,,
3M47JKRKCXPMPCFD2UF7T1L7KXZ683,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:52 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 09:29:52 PDT 2016,Tue Oct 25 09:41:09 PDT 2016,Tue Nov 01 09:41:09 PDT 2016,2016-11-01 16:41:14 UTC,,,677,100% (9/9),100% (9/9),0% (0/0),1399,https://github.com/openshift/origin/pull/6591,https://github.com/openshift/origin/graphs/contributors,openshift-bot,"openshift-bot, smarterclayton, deads2k",3,21,{},stevekuznetsov,stevekuznetsov,"openshift-bot, smarterclayton, deads2k, bparees, mfojtik",openshift-bot,N,{},"Y,core","image stream flake: https://ci.openshift.redhat.com/jenkins/job/test_pr_origin/231/$$$$continuous-integration/openshift-jenkins/merge SUCCESS (https://ci.openshift.redhat.com/jenkins/job/merge_pull_requests_origin/4709/) (Image: devenv-rhel7_3214)",N,{},N,"I've got no idea how this occurred. We see output from truncate_large_logs in stderr, which is called in cleanup after the container logs are dumped. I've amended the traps, added a surefire fail into the e2e core. lets look out for container logs now.",3H8DHMCCWAZ7R6UNB8PPDWZBG2JDKI,TRUE,YN,stevekuznetsov deleted the stevekuznetsov:skuznets/tempdirs branch on Mar 16,,
3RSBJ6YZECELTXV4A477KTOKS15OFQ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:49 PDT 2016,,,A2A2OF6MUITGFS,Approved,Tue Oct 25 20:22:14 PDT 2016,Tue Oct 25 20:26:14 PDT 2016,Tue Nov 01 20:26:14 PDT 2016,Tue Nov 01 17:51:55 PDT 2016,,,240,100% (1/1),100% (1/1),0% (0/0),1400,https://github.com/ripple/rippled/pull/1471,https://github.com/ripple/rippled/graphs/contributors,ximinez,"JoelKatz, vinniefalco, ahbritto",5,21,{},ximinez,ximinez,"JoelKatz, vinniefalco, ahbritto","codecov-io, miguelportilla","Y,core|Y,others","_ÙÔç merge$$$$_ÙÔç",N,{},N,{},N,{},3ZGVPD4G6U59XQP6XZSE5F5AN06ZT1,FALSE,NY,"Merged d5363d1, 8da2a72, 6c5b23b, e0b2a26, and a67e4ab",,
335HHSX8CDTE3WVLFLHRCKOY42CDHH,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:49 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 05:51:33 PST 2016,Wed Nov 09 05:58:44 PST 2016,Wed Nov 16 05:58:44 PST 2016,,,,431,98% (39/40),0% (0/1),0% (0/1),1401,https://github.com/Realm/SwiftLint/pull/330,https://github.com/Realm/SwiftLint/graphs/contributors,jpsim,"jpsim, scottrhoyt, norio-nomura",5,21,{},marcelofabri,marcelofabri,"keith, scottrhoyt, norio-nomura, jpsim","marcelofabri, codecov-io","Y,core","Thanks for doing this @marcelofabri, this makes the rule much more useful!I was a bit worried about the impact this would have on performance, and turns out it's a fairly large one :grimacing:.As a reference point, the testSwiftLintLints integration test takes 2.817s to run on the master branch right now.With this PR, it takes 46.092s :scream:.By changing the syntaxKindsByLine function to this, that goes down to 6.815s:public func syntaxKindsByLine(startLine: Int? = nil,                              endLine: Int? = nil) -> [(Int, [SyntaxKind])] {    let contents = self.contents as NSString    let linesAndKinds = syntaxMap.tokens.map { token -> (Int, SyntaxKind) in        let tokenLine = contents.lineAndCharacterForByteOffset(token.offset)        return (tokenLine!.line, SyntaxKind(rawValue: token.type)!)    }.filter { line, _ in        return line >= startLine && line <= endLine    }    var results = [Int: [SyntaxKind]]()    for lineAndKind in linesAndKinds {        results[lineAndKind.0] = (results[lineAndKind.0] ?? []) + [lineAndKind.1]    }    return Array(zip(results.keys, results.values))}However, I still think that's too much of a performance regression, especially for larger projects.One thing we could do to minimize the performance impact here would be to only count the number of comment-only lines after confirming that the function exceeds the maximum line length when accounting for all lines, which is much faster. For example, in FunctionBodyLengthRule.validateFile(...):where endLine - startLine > limit && lineCount(file, startLine: startLine, endLine: endLine) > limit {Actually we could move that to its own function:...where exceedsLineCountExcludingComments(file, startLine, endLine, limit)...private func exceedsLineCountExcludingComments(file: File, _ start: Int, _ end: Int,                                               _ limit: Int) -> Bool {    return end - start > limit && lineCount(file, startLine: start, endLine: end) > limit}In this case, SwiftLint goes back to linting in 2.866s, although that's not exactly a great benchmark now because SwiftLint's functions never exceed 40 lines, so the benchmark doesn't hit the slow path.Could you please apply these changes to help reduce the performance impact? If you find different ways to achieve similar performance gains, I'm certainly open to that too!$$$$@marcelofabri this is looking good. What are the next steps (if any) you want to take with this PR?$$$$Sorry, my saying too much about performance. :bowing_man:I also think this is looking good.$$$$:clap: thanks!!!","Y,core","Calling counting line can be reduced by changing position of parameter enumeration.from:// enumerate parametersfor parameter in parameters.reverse() {    // count lines    let lineCountExcludingComments =‰Û_    // check violation    if lineCountExcludingComments > parameter.value {        ‰Û_    }}to:// count lineslet lineCountExcludingComments =‰Û_// enumerate parametersfor parameter in parameters.reverse() {    // check violation    if LineCountExcludingComments > parameter.value {        ‰Û_    }}",N,{},N,{},3G2UL9A02E2KBI8OIRS23LKYYE776W,TRUE,YY,jpsim merged commit 5103ebd into realm:master on Jan 15,,
38B7Q9C28GTM3HYN7MLLTXGI43H69S,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:49 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 04:54:03 PST 2016,Tue Nov 08 04:58:09 PST 2016,Tue Nov 15 04:58:09 PST 2016,,,,246,98% (39/40),0% (0/1),0% (0/1),1404,https://github.com/docker/notary/pull/440,https://github.com/docker/notary/graphs/contributors,cyli,"cyli, endophage, diogomonica",4,21,{},riyazdf,riyazdf,"RichardScothern, HuKeping, diogomonica, NathanMcCauley, davidwilliamson, SvenDowideit, cyli, dmcgowan, endophage, avaid96, riyazdf, aaronlehmann",GordonTheTurtle,"Y,core","Haven't tried this since last week, but code LGTM.","Y,core","When adding a key to an existing delegation, having to duplicate the paths seems like terrible UX. Would it be possible to add a --update flag to the add command that indicates that the key and any new paths should be added to the role, regardless of keys or paths it currently contains?",N,{},N,{},39O5D9O87UGRQGG2Q62FC40SO8I3CK,TRUE,YY,cyli merged commit cf0bb5a into master on Jan 20,,
35ZRNT9RUIMQDLFBQ965JKZNPB13OX,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:52 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 07:40:06 PDT 2016,Tue Oct 25 08:06:02 PDT 2016,Tue Nov 01 08:06:02 PDT 2016,2016-11-01 15:06:14 UTC,,,1556,100% (9/9),100% (9/9),0% (0/0),1406,https://github.com/aspnet/KestrelHttpServer/pull/573,https://github.com/aspnet/KestrelHttpServer/graphs/contributors,cesarbs,"halter73, benaadams, cesarbs",5,21,{},cesarbs,cesarbs,"halter73, benaadams, cesarbs","halter73, benaadams",N,{},"Y,core","There shouldn't be much of an effect as long as PathNormalizer.NeedsNormalization isn't too expensive. I would like to know for sure that's the case.$$$$@benaadams NFC normalization will only take place in paths with percent-encoded characters.I'm making a small change that might make a difference - I'll only try to remove dot segments if I detect any. This will save cycles and allocations.","Y,inconsistency",I'm curious to see how this affects perf for requests that don't need normalization (e.g. the plaintext benchmark).,"Y,others","It shouldn't effect it much as needDecode would be false in that case and it should just skip it?$$$$Do you have any data for normalizing ../, or ./ in paths?$$$$@blowdart can we design the GetRawUrl feature later? We'd need to decide how it flows through the entire stack.",3S4AW7T80C65BGTC3X0XPSIKSP64LA,TRUE,YN,cesarbs deleted the cesarbs/normalize-request-path branch on Jan 29,,
375VMB7D4J7EZR65L3ZCCWPD4FRDIA,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:52 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 07:06:58 PDT 2016,Tue Oct 25 07:28:34 PDT 2016,Tue Nov 01 07:28:34 PDT 2016,2016-11-01 14:29:14 UTC,,,1296,100% (9/9),100% (9/9),0% (0/0),1410,https://github.com/highfidelity/hifi/pull/6766,https://github.com/highfidelity/hifi/graphs/contributors,ZappoMan,"birarda, ZappoMan, Atlante45",6,22,{},samcake,samcake,"birarda, ZappoMan, Atlante45, ey6es","RyanDowne, PhilipRosedale, hifi-gustavo, OmegaHeron",N,{},"Y,core",the line above this... is super weird... should be: bool _fxaaStatus { false };,N,{},,@PhilipRosedale The effect doesn't affect the lightmapped models (such as the windmill) because the same and more accurate information is somewhat already in the baked light map.,3L6L49WXW1LR9RQRBAKQ83MN6Z254J,TRUE,YY,ZappoMan merged commit e1c369d into highfidelity:master on Jan 22,,
3ZCC2DXSD7S3N2G1LH8TB5T2CMUYY8,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:49 PDT 2016,,,A1D8QTP0Y28WFF,Approved,Wed Oct 26 23:15:33 PDT 2016,Wed Oct 26 23:19:46 PDT 2016,Wed Nov 02 23:19:46 PDT 2016,Tue Nov 01 17:51:57 PDT 2016,,,253,100% (1/1),100% (1/1),0% (0/0),1414,https://github.com/druid-io/druid/pull/2217,https://github.com/druid-io/druid/graphs/contributors,navis,"fjy, xvrl, gianm",3,22,{},navis,navis,"fjy, xvrl, gianm, himanshug, jon-wei",jon-wei r,N,{},"Y,core","Hi @navis, can you and @sirpkt consolidate #2210 and #2217 into a single PR?",,"navis commented on Apr 18cannot sustain this, sorry.",N,{},3NKQQ8O39ZTLU2ZZ5MTRJJ89J8XDUQ,FALSE,NN,{},,
3FBEFUUYRKT0808SZSZLPSR2ALZ6A7,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:52 PDT 2016,,,A1WSTW4R68I8KI,Approved,Mon Oct 24 22:54:29 PDT 2016,Mon Oct 24 23:12:39 PDT 2016,Mon Oct 31 23:12:39 PDT 2016,2016-11-01 06:13:14 UTC,,,1090,100% (7/7),100% (2/2),0% (0/0),1417,https://github.com/ansible/ansible/pull/13771,https://github.com/ansible/ansible/graphs/contributors,sivel,"mpdehaan, jimi-c, bcoca",7,22,{},sivel,sivel,"mpdehaan, jimi-c, bcoca, abadger, jctanner, sivel, dhozac, privateip","cygnetix, tom025","Y,core|Y,others","he, i was doing same last night, but ran out of gas.$$$$This is awesome @sivel. Thanks for taking the time to work on this. I can't wait to see it merged (fingers crossed).$$$$Thanks for effort @sivel can't wait to see this merged too.",N,{},"Y,improve","I find it suboptimal to download go and and build stuff during the tests, while on the other hand we try preinstalling packages where possible to make travis faster. Maybe you can instead use precompiled binaries?",N,{},3S96KQ6I9NS6UPKA5H3HENM7ZBETD0,TRUE,YY,"A few minor comments. Everything else looks good. If this is passing tests and you think it's ready to merge to devel then I'm okay with it. Tests -- I'm not sure how long compiling the module takes but I expect it's minimal. I think you're right, we probably should put golang into the docker images.$$$$sivel merged commit 196453b into ansible:devel on 13 May",,
3L2OEKSTW9YO8WPJ8DAZCS50J7S8Y5,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:42 PST 2016,,,A2958TQAW43MP6,Approved,Fri Nov 04 07:51:24 PDT 2016,Fri Nov 04 08:01:23 PDT 2016,Fri Nov 11 07:01:23 PST 2016,2016-11-11 15:01:30 UTC,,,599,100% (12/12),100% (12/12),100% (11/11),1418,https://github.com/samsung/GearVRf/pull/371,https://github.com/samsung/GearVRf/graphs/contributors,thomasflynn,"liaxim, thomasflynn, NolaDonato",4,22,{},danke-sra,danke-sra,"liaxim, thomasflynn, NolaDonato","danke-sra, rahul27, thomasflynn, thomasflynn","Y,core","I agree that GVRContext should be made available regardless of hierarchy. However, it was assumed that it is not needed in sub-class of GVRActivity (which owns GVRContext). This just corrects this issue.","Y,core|Y,others","Added the missing so file and added copyright headers and javadoc.$$$$","Y,improve",I don't think I fully understand this function. The context should be available irrespective of the hierarchy. It is the GVRActivity that calls setScript. The script in turn could be used to get the context. Do you have an example of where this is used in a subclass? maybe that would give a better idea.,"Y,not fit.",I don't think I fully understand this function. The context should be available irrespective of the hierarchy. It is the GVRActivity that calls setScript. The script in turn could be used to get the context. Do you have an example of where this is used in a subclass? maybe that would give a better idea.,3X31TUMD7YAOJHWTGFHVRUBHJLJL10,TRUE,YY,thomasflynn merged commit 3ec102b into Samsung:master on Jan 21,,
3TZDZ3Y0JSURWVXQ1G94Y1P1WS191X,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:50 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 05:40:31 PST 2016,Mon Nov 07 06:03:22 PST 2016,Mon Nov 14 06:03:22 PST 2016,,,,1371,98% (39/40),0% (0/1),0% (0/1),1424,https://github.com/puppetlabs/puppet/pull/4550,https://github.com/puppetlabs/puppet/graphs/contributors,joshcooper,"lak, hlindberg, joshcooper",5,23,"there're some comments by the pull requester him/herself that are proposals for an alternative implementation, asking for consensus. Should those be included in answer to Q2 ?  You can mail me debd92 [at] gmail",branan,branan,"vrthra, MikaelSmith, cprice404, justinstoller, joshcooper, ferventcoder, thallgren, HAIL9000, adrienthebo, pcarlisle, haus, jpartlow, whopper, johnduarte, slippycheeze, Iristyle, gguillotte, stschulte, nfagerlund, hlindberg, MosesMendoza, scotje, jeffmccune, nicklewis, zaphod42, peterhuene","branan, Sharpie",N,{},"Y,core","Is there any other reason to be using the file_system stuff in this code path?@branan All puppet use of file system calls should be going through the file_system stuff. Not specifically the preserve_line_endings bit, but perhaps one of the other calls. If that means a method needs to be added to file_system, then a method should be added there and then called. It guarantees that all file access calls are handled cross platform appropriately.$$$$I think that should work and is probably fine for now. I'll take a closer look.Changing the save method to force encoding to ASCII-8BIT works for me (both when creating a new file, update existing file, and when running off cache). So yeah, let's update this PR.$$$$Everything here is good. The only statement I disagree with is:I think it's worth it to let line endings be swapped on write, to keep the files more human-readable on Windows with editors that don't understand Unix line-endings.There are two things to consider hereYou are making this change on read, but not saving it back to the file. If the file is checksummed (or will be in the future), it could have unintended consequences.This is not being done with any customer files.Since this is likely only used as an internal file for Puppet, swapping line endings at read time only may not cause any real harm. But if it was anything user facing like customer files, then I would suggest not changing the files at all. We don't know all of the scenarios in which customer files can break based on making any change to the file. In most cases changing line endings causes undesired behavior - see https://tickets.puppetlabs.com/browse/PUP-927.I would take the stance that it is almost never okay to swap line endings. Given the constraints above, perhaps this is one of the limited cases where it is okay.","Y,improve","I'm fine skipping 'yaml'.Using file_system.read seems fine.@ferventcoder read_preserve_line_endings is problematic, because it's just guessing what the encoding was when the file was written out. So it's possible for a non-UTF8 encoded file to appear as valid UTF8 when read back in.",N,{},3IRIK4HM3B8QNZ3K980DJ7CBXA8C66,TRUE,YY,joshcooper merged commit 280674f into puppetlabs:stable on Jan 20,,
31S7M7DAGGEN6HA8SWW49GZRO58TLM,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:49 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:43 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 04:51:27 PST 2016,Mon Nov 07 05:07:02 PST 2016,Mon Nov 14 05:07:02 PST 2016,,,,935,98% (39/40),0% (0/1),0% (0/1),1425,https://github.com/theforeman/smart-proxy-pulp/pull/3,https://github.com/theforeman/smart-proxy-pulp/graphs/contributors,witlessbird,"witlessbird, shlomizadok",4,23,{},shlomizadok,shlomizadok,"witlessbird, shlomizadok, jlsherrill","lzap, ohadlevy",N,{},"Y,others","Well, we have some bad practice in smart proxy using backticks for some commands which is slow. Executing a process via shell is a lot slower. Can you please consider using IO.popen if you need to read the stdout? We use this technique a lot in core (frankly this is worth creating a helper method in util.rb but not this time). Usage is straightforward.>> require ""benchmark""=> true>> ?> Benchmark.bm(7) do |x|?>   x.report(""shell"")   { (1..1000).each { `/bin/false` } }>>   x.report(""exec"") { (1..1000).each { system('/bin/false') }}>> end              user     system      total        realshell     0.040000   0.210000   0.840000 (  0.820493)exec      0.020000   0.180000   0.710000 (  0.672616)","Y,improve","I don't understand why the logic is so complex. This should be a dumb component that reads the data in well-defined format and passes it over the wire. I see some weird calculations which can lead to bugs. Why don't you simply read the data via df --output=used -k which gives you size in kB. Or even better, the safest is to use bytes, which is df --output=used -B KB multiplied by 1000. Then all the calculations can be done during presentation which is IMHO safest. Most monitoring solutions I've encountered with transport these in bytes.$$$$I still have a comment on the complexity, but I don't want to block this. Please only fix my shell spawning comment and if you can add more unit test coverage of all the sizes which are supported (you only test one success scenario currently). Then we are good to go.",N,{},374TNBHA8CJW0KN9K9W0M3LL0YSQYD,FALSE,NY,"merged at 7b4d074. Thanks, @shlomizadok!",,
33NOQL7T9ONODMZO4ZCIQZE2P1W8ZW,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:52 PDT 2016,,,A3LGJHPZCD8PQA,Approved,Mon Oct 31 12:49:37 PDT 2016,Mon Oct 31 12:56:16 PDT 2016,Mon Nov 07 11:56:16 PST 2016,Tue Nov 01 17:51:50 PDT 2016,,,399,100% (1/1),100% (1/1),0% (0/0),1426,https://github.com/juttle/juttle/pull/126,https://github.com/juttle/juttle/graphs/contributors,rlgomes,"dmajda, demmer",4,23,{},rlgomes,rlgomes,"dmajda, demmer","bkutil, go-oleg, davidvgalbraith, rlgomes, dmehra, henridf, VladVega","Y,core",Finally looked at this! It's awesome.,"Y,core",I'd want the same support in read file because there is no reason why only stdio should handle grok; how would that work - do we need Yet Another Repo ‰ã¢?,N,{},N,{},3IUZPWIU1PV60CUES3UF5KOWPTZKWW,TRUE,YY,rlgomes merged commit 39ea29e into master on Jan 19,,
3M7OI89LVYCO1F5QJ6VCVNHQAOK6C9,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:51 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 08:34:06 PST 2016,Mon Nov 07 08:43:00 PST 2016,Mon Nov 14 08:43:00 PST 2016,,,,534,98% (39/40),0% (0/1),0% (0/1),1429,https://github.com/amplab/tachyon/pull/2418,https://github.com/amplab/tachyon/graphs/contributors,apc999,"calvinjia, apc999, haoyuan",6,23,{},apc999,apc999,"ifcharming, peisun1115, haoyuan, apc999, yupeng9, aaudiber, jsimsa, gpang, calvinjia",AmplabJenkins,"Y,core",LGTM,"Y,core","Rename this to getBlockWorkerDataBindHost?$$$$Maybe rename this Server so that both master and worker can implement?$$$$should we be using tachyon.worker.NetAddress instead?$$$$since this is a refactor PR, we should probably limit the scope of this PR by just making it moving code from one class to the other.Using WorkerNetAddress requires functionality change of code. We could probably address this in separate PRs (if necessary).",N,{},N,{},3KIBXJ1WD6IYV3LC1H35OQBANMVKO6,TRUE,YY,apc999 merged commit 0a6a6e0 into Alluxio:master on Jan 12,,
363A7XIFV4ALNQNT007T1K71REQAV2,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:50 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 06:52:24 PST 2016,Wed Nov 09 07:02:55 PST 2016,Wed Nov 16 07:02:55 PST 2016,,,,631,98% (39/40),0% (0/1),0% (0/1),1431,https://github.com/mozilla/kitsune/pull/2766,https://github.com/mozilla/kitsune/graphs/contributors,mythmon,"rlr, mythmon, rehandalal",5,23,{},safwanrahman,safwanrahman,"willkg, Osmose, mythmon, glogiotatidis, dean, rlr, rehandalal","safwanrahman, brittanystoroz",N,{},"Y,core",@mythmon and I had a quick chat about this and we think it might be a good idea to refactor this slightly so that you create an AbstractRevision class for the common elements of Revision and DraftRevision and have both those classes inherit from AbstractRevision. I can walk you through this if you need help with it.,"Y,improve","I have some trouble with the tests for this. I think are functional, but they are very muddled. They involve a lot of parts and each test relies on many things. I think the tests should be split up into smaller units, and we need to work on the way you set up the tests.In particular, you often are using the http interfaces to create models for testing. The only time you should be calling the views (with something like self.client.get) is when you are testing the view. Otherwise, you should be creating the models through a factory. You'll need to create a DraftRevisionFactory in kitsune/wiki/tests/__init__.py.I'd go so far as to say that each test should probably only have one http request in it. This is not an absolute rule, it is possible to write a good test that has more than one, but it is probably a good goal to strive for.Does that make sense? I can give more focused feedback if that would be useful. We can also chat on IRC about this, if it would be easier.",N,{},3AWETUDC93GJOC9V3NTAR832H0GZIF,TRUE,YY,mythmon merged commit 3d9a975 into mozilla:master on Feb 5,,
3HFWPF5AK975BD74XQNE3P9OM043SU,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,3,BatchId:2567999;,3600,604800,Wed Nov 23 05:41:42 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Thu Nov 10 04:15:25 PST 2016,Thu Nov 10 04:24:35 PST 2016,Thu Nov 17 04:24:35 PST 2016,,,,550,98% (39/40),0% (0/1),0% (0/1),1432,https://github.com/dotnet/core-docs/pull/205,https://github.com/dotnet/core-docs/graphs/contributors,cartermp,"stevehoag, dend, blackdwarf",6,23,{},BillWagner,BillWagner,"qinezh, dend, kempb, bleroy, BillWagner, rpetrusha, ghogen, matthewreily, mairaw, cartermp, DuncanmaMSFT, chenkennt, tdykstra, BethMassi, bradygaster, stevehoag, blackdwarf, richlander",Maxwe11,"Y,core|Y,others","Yes, it looks good so far. I agree it makes sense to break it up - in general, if a conceptual topic runs more than 2-3 pages it tends to lose readers.$$$$Left some feedback. I like the look of it so far. I agree that this could probably be broken up into a few sub-articles given the depth of the material.$$$$nice tutorial :clap:$$$$Went through it and left some feedback. I'm a huge fan of the interpreting and translating sections. Great work.$$$$LGTM - I think you already hit the major points.","Y,core","This is great! I learned a lot by reading it. A few things come to mind, as well as a short list of specific edits.Add a link to the next article in the sequence at the end of each article? and maybe the previous ones, too, at the start of the topic.Our audience is not necessarily familiar with Entity Framework and LINQ since a good part of the audience for .NET Core will be people who are coming from other platforms and haven't been using C# and following all the updates to it. I just think that starting with the three words ""You know LINQ"" would tend to say to readers who don't know LINQ that they shouldn't be reading this.The next comments refer to some small edits in specific topics :building:line 72 ""to create"" not ""to creates""line 86 ""follows""line 137 remove ""of an""line 158 remove ""of""204 capitalize ""Core"" when referring to "".NET Core""execution:line 56 compile-time not ""compile time""161-162 compile-timeexplainedline 60: structure - spelling87 add ""an"" to ""expression tree""interpreting8 straight-forward : remove hyphentranslating6 undestand => understandThanks! Great info here. I'm excited to see more.$$$$I'm thinking it may be good to drop this aside. I don't think too many people would prefer to use reflection here, and bringing up the notion that .NET Core doesn't have something that people may be interested in doesn't quite feel appropriate for the doc.$$$$I'd put a blurb here about how you can visit many more different types of expressions now that you've got a more general visitor implementation.",N,{},N,{},3DI28L7YXB2ADBM1ZTUREZLYC0U1EX,TRUE,YY,cartermp merged commit 754cdbf into dotnet:master on Mar 4,,
37J05LC5AX7AU2QB3LKCOX4DHUGDJM,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:51 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 05:09:11 PST 2016,Tue Nov 08 05:32:47 PST 2016,Tue Nov 15 05:32:47 PST 2016,,,,1416,98% (39/40),0% (0/1),0% (0/1),1433,https://github.com/kubernetes/kubernetes/pull/19481,https://github.com/kubernetes/kubernetes/graphs/contributors,alex-mohr,"k8s-merge-robot, brendandburns, lavalamp",8,23,{},deads2k,deads2k,"thockin, justinsb, bprashanth, zmerlynn, smarterclayton, vmarmol, wojtek-t, lavalamp, erictune, eparis, k8s-merge-robot, piosz, jlowdermilk, satnam6502, saad-ali, dchen1107, deads2k, roberthbailey, vishh, jbeda, bgrant0607, caesarxuchao, yujuhong, mikedanese, nikhiljindal, gmarek, a-robinson, sttts, brendandburns, derekwaynecarr, alex-mohr","csrwng, k8s-bot, k8s-teamcity-mesosphere, googlebot","Y,core","I like this since it lets systems like quota remain ignorant of patch and just code against update.$$$$LGTM$$$$Functionally, looks good.A general comment on this area of the code: I don't get why some things get done synchronously, and others synchronously (via finishRequest). It seems like the split is in an arbitrary place in the request handling flow.Anyhow, LGTM",N,{},N,{},N,{},3FPRZHYEPZVNPPM2HNXK2WOH9GGV3V,TRUE,YY,alex-mohr merged commit 21a5d57 into kubernetes:master on Jan 22,,
3BJKPTD2QC0Y9F5LXGT0VS8QUXXTRC,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:50 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 10:24:13 PST 2016,Mon Nov 07 10:31:16 PST 2016,Mon Nov 14 10:31:16 PST 2016,,,,423,98% (39/40),0% (0/1),0% (0/1),1434,https://github.com/jupyter/nbconvert/pull/191,https://github.com/jupyter/nbconvert/graphs/contributors,takluyver,"minrk, jdfreder, Carreau",4,23,{},tritemio,tritemio,"ellisonbg, amueller, Carreau, jdfreder, willingc, takluyver, jakevdp, minrk, jhamrick, michaelpacer, ivanov, fperez",tritemio,"Y,core","@tritemio Thanks for this PR. It's very helpful. I have some grammar and style edits to make the section more user friendly. :sunglasses:$$$$seeing that this is an improvement on our docs I would be +1 to merge and iterate.$$$$@Carreau +1 on merge and iterate. Will leave to you or @takluyver to merge.@tritemio Thank you! :cookie:$$$$Thanks for all your work on this!","Y,core","On Python 3, a file that isn't explicitly closed and gets cleaned up when all references to it are gone generates a ResourceWarning. Admittedly these aren't visible by default, and perhaps it's overly strict, but they do show up during tests, so I still think it's better to point people to with open(....",N,{},N,{},3IKZ72A5B545XWTMZRCVTOJ0PGTFN4,TRUE,YY,takluyver merged commit e71b191 into jupyter:master on Jan 20,,
3X55NP42EO48YLRC59JK8K4DZGX3PE,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:52 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:50 PST 2016,,,A15UL2ZJDWDN7H,Submitted,Sun Nov 06 20:06:58 PST 2016,Sun Nov 06 20:10:09 PST 2016,Sun Nov 13 20:10:09 PST 2016,,,,191,0% (0/0),0% (0/0),0% (0/0),1435,https://github.com/apinf/api-umbrella-dashboard/pull/757,https://github.com/apinf/api-umbrella-dashboard/graphs/contributors,jykae,"brylie, nnn, frenchbread",3,23,{},frenchbread,frenchbread,"brylie, nnn, frenchbread, jykae","nnn, jykae","Y,core","Great initial work here @frenchbread _ÙÔçThat said, I think there is some opportunity for substantial improvement here, so am marking this as WIP. I have provided references and example code to support many of suggestions, and am available for pair-programming/discussion _Ù÷ã",N,{},"Y,bug","I noticed couple of bugs. @brylie started to fix them.1) Cannot remove Backlog item.Uncaught TypeError: Cannot read property '_id' of undefined2) When editing item I would expect to have existing data in the form, now it is empty after creating one.3) Admin should be able to modify all API backlogs, currently only API manager is able to edit. Anonymous user should not be able to edit API backlogs.",N,{},3Z2R0DQ0JI2H2W4XIXU5JIV22BTE2I,TRUE,YY,@jykae jykae merged commit 5393cce into develop on Jan 21,,
3XABXM4AJ1TFZUYXH3T5Z62YKYB8Q2,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:43 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 05:33:34 PST 2016,Mon Nov 07 05:56:22 PST 2016,Mon Nov 14 05:56:22 PST 2016,,,,1368,98% (39/40),0% (0/1),0% (0/1),1443,https://github.com/diydrones/ardupilot/pull/3410,https://github.com/diydrones/ardupilot/graphs/contributors,guludo,"tridge, rmackay9, lucasdemarchi",5,25,{},bugobliterator,bugobliterator,"jberaud, pchickey, rmackay9, tridge","bugobliterator, magicrub, guludo, lucasdemarchi","Y,others","@bugobliterator I've added some comments regarding waf. Thanks for your work on this and your patience too! :-)","Y,core|Y,others","This is a very good start, but it needs a bit of refinement:the git submodule init and git submodule update needs to be automatic. See mk/check_modules.shsee the CHECK_MODULES target. This needs to be made a dependency for more than just the px4 buildwe need to auto-rebuild the headers if the xml files change (just use build dependencies)we'll need a github.com/diydrones/mavlink.git, so we can have changes that aren't in upstream yetwe'll need the waf build updated too (gustavo or lucas can help with that)$$$$Also the built files should go in $BUILDROOT, not in the source tree. We should be keeping the source tree clean, and everything goes in BUILDROOT (eg /tmp/ArduCopter.build for a copter SITL build)So the generated files would go in $(BUILDROOT)/libraries/GCS_MAVLink/include$$$$@bugobliterator as for the waf integration, it's not correct since it's missing the ordering of header creation and source files the depend on them. The right way to do it is to create a waf tool that has a configure (to check for program availability) and build (which creates the headers) steps, just like for example the bison tool (http://docs.waf.googlecode.com/git/apidocs_16/_modules/waflib/Tools/bison.html). I or @guludo will take a look soon to properly integrate it.","Y,improve","@bugobliterator I think the include dir in the waf directory is still wrong, that's why it's failing on travis.As per mavlink documentation, we shouldn't include the internal mavlink headers. Just make sure to include <mavlink.h>, no matter what was there previously. Go ahead and squash the commits... it's actually harder to review with the fixups on top.@guludo after he sends the squashed version, could you take a look and send any pending fixup? I think the PYTHONPATH still needs some care.$$$$@bugobliterator I experienced some error on my end. On a second build, the build stucks... With -vv waf keep complaining about the headers not having a signature... I have already a wip branch on top of yours on my fork for fixing that, but I'd like to run more tests.Is it okay to wait for a little longer? Having mavlink as a submodule is great by the way!",N,{},3NXNZ5RS1BL7T1AMGYVENVBZM0H97D,FALSE,NN,"Extended version at #3504.$$$$guludo closed this on Jan 15",,
3K2CEDRACBP7CZSTS8XJ9TEGOAYTMO,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:50 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:43 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 10:10:36 PST 2016,Mon Nov 07 10:17:08 PST 2016,Mon Nov 14 10:17:08 PST 2016,,,,392,98% (39/40),0% (0/1),0% (0/1),1448,https://github.com/statsmodels/statsmodels/pull/2749,https://github.com/statsmodels/statsmodels/graphs/contributors,N-Wouda,"jseabold, josef-pkt, ChadFulton",3,25,{},N-Wouda,N-Wouda,"kshedden, vincentarelbundock, jseabold, rgommers, josef-pkt, ChadFulton",N-Wouda,"Y,core","I think KPSS would be a nice addition to Statsmodels.Unless I'm missing something, though, I think this couldn't be included because the tseries library is GPL licensed (see https://cran.r-project.org/web/packages/tseries/index.html) which is incompatible with the Statsmodels license.$$$$Great, thanks for adding the unit tests. It looks generally good to me, I just had a few inline comments / questions. It'll be good to have the KPSS test in Statsmodels.",N,{},"Y,improve","about null_hypo: I don't like it much because we never used something like this, and we are removing the trend (or trend of order 0), the hypothesis is stationarity.I will be offline for some time today, the main thing is to work towards consistent argument names, instead of introducing another name. I remembered ""trend"" from ARMA and similar models.",N,{},3NQL1CS15SWO5SJQ68QASQKTHUIVYV,FALSE,NN,N-Wouda closed this on Jan 19,,
3DA79LNS59J6QDKJMQS4DU5AOJI3TJ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:47 PST 2016,,,A2958TQAW43MP6,Approved,Wed Nov 02 00:04:49 PDT 2016,Wed Nov 02 00:53:49 PDT 2016,Tue Nov 08 23:53:49 PST 2016,2016-11-09 07:54:30 UTC,,,2940,100% (12/12),100% (12/12),100% (11/11),1452,https://github.com/kubernetes/kubernetes/pull/19335,https://github.com/kubernetes/kubernetes/graphs/contributors,k8s-merge-robot,"k8s-merge-robot, brendandburns, lavalamp",6,25,{},justinsb,justinsb,"k8s-merge-robot, brendandburns, lavalamp, caesarxuchao, justinsb, derekwaynecarr, mikedanese, gmarek, deads2k","jtblin, k8s-teamcity-mesosphere","Y,core","Thanks for the great comments @bprashanth - I think I addressed all yours comments, including adding some tests - thanks for the hint about splitting out the code & mocking time. The refactor touched most of the lines, so I squashed the commits.$$$$Thanks @bprashanth - I added the init params as you suggested. Hopefully I'll get lucky on this e2e run!","Y,core","I think we should get something like this into 1.2, but I am really unsure what that something should be. @danielschonfeld and I are fixing lots of individual causes (cf #19874) but there will always be a ""next"" bottleneck. @brendandburns or @davidopp any thoughts?","Y,improve","Reassigned to brendan... I don't think this is perfect, but I think it's better than the snowballing problems that happen when we hit the rate limits.",N,{},3TUI152ZZCBZAEC68KPR8GABSZBQ1E,TRUE,YY,k8s-merge-robot merged commit 84891ca into kubernetes:master on 22 Feb,,
37AQKJ12TXCBPUID15YVV798IIUTTP,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:51 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Thu Nov 10 03:44:27 PST 2016,Thu Nov 10 04:11:22 PST 2016,Thu Nov 17 04:11:22 PST 2016,,,,1615,98% (39/40),0% (0/1),0% (0/1),1456,https://github.com/jcabi/jcabi-http/pull/118,https://github.com/jcabi/jcabi-http/graphs/contributors,rultor,"yegor256, carlosmiranda",6,25,{},piddubnyi,piddubnyi,"yegor256, carlosmiranda","dmarkov, pinaf, cvrebert, rultor",N,{},N,{},"Y,improve","@piddubnyi not sure this is a good solution since you are using the Request as the key...$$$$@piddubnyi I'm not sure this solved what the original reporter asked for. @cvrebert could you please take a look? Are the headers being used the way you intended?$$$$Hmm, I might have misread. FWIW, lookInCache doesn't seem like the best name; I wouldn't expect a method with such a name to have side-effects (such as updating the cache). I suggest renaming it.",N,{},3TS1AR6UQR2GUB1ZJKV6XRXBRMZ7F6,TRUE,YY,rultor merged commit 02ab669 into jcabi:master on Jan 16,,
3BS6ERDL93VY67B4J2QNFTZ8VOW6D9,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:53 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 09:10:38 PDT 2016,Tue Oct 25 09:23:18 PDT 2016,Tue Nov 01 09:23:18 PDT 2016,2016-11-01 16:24:14 UTC,,,760,100% (9/9),100% (9/9),0% (0/0),10001,https://github.com/jruby/activerecord-jdbc-adapter/pull/233,https://github.com/jruby/activerecord-jdbc-adapter/graphs/contributors,kares,"kares, nicksieger",5,14,{},trak3r,trak3r,"kares, nicksieger","bwalsh, gregors, jhiggins","Y,others",@kares - I meant no disrespect. I really appreciate all the hard work you guys are doing!!! I'm more than willing to test MS-SQL DB.,"Y,others",Your bundle is complete! Use bundle show [gemname] to see where a bundled gem is installed.,N,{},"Y, no value","Running into this problem. Is there anything blocking this pull? Anything I can do to help?$$$$I'm also running into this issue. Also this is a duplicate of #116 - are the build failures related to this pull request? What do we need to do to get this moving? A failing test for 2008?$$$$I guess ms sql doesn't get any love around here?",39RP059MEIH92XW6IOBZXJ3F2MMBMY,FALSE,NY,"slorek commented on May 8, 2013Just to confirm that this issue still exists in master, when connecting to Azure SQL Database. The fix in the pull request works for me. Please consider merging.",,
3PUOXASB57RORRIY9RIWQV9D97DZ9B,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:53 PDT 2016,,,A2958TQAW43MP6,Approved,Wed Oct 26 04:28:07 PDT 2016,Wed Oct 26 05:04:48 PDT 2016,Wed Nov 02 05:04:48 PDT 2016,Tue Nov 01 17:51:54 PDT 2016,,,2201,100% (12/12),100% (12/12),100% (11/11),10002,https://github.com/guard/guard/pull/156,https://github.com/guard/guard/graphs/contributors,thibaudgg,"netzpirat, e2, rymai",6,27,{},sunaku,sunaku,"netzpirat, e2, rymai","flori, kierzniak","Y,core","I vote +1 for this    $$$$    Yeah I totally agree on what @netzpirat","Y,core|Y,others","Maybe we can use https://github.com/defunkt/colored.    $$$$    It's possible to switch of coloring globally by calling    Term::ANSIColor::coloring = STDOUT.isatty ‰ÛÜ    ‰ÛÜ$$$$    In my project I'm using guard to some standard stuff SASS ,Livereload etc.","Y,improve|Y,inconsistency","It's just that it seems to me that has proposed a solution that fixes his particular problem, that's fine but there were other solutions to it, that could maybe be better. We'll discuss that tomorrow with . :P    $$$$    sorry I'm a bit late but I don't feel comfortable with writing what's not diagnostic to me to STDERR","Y,not fit.","It's just that it seems to me that @sunaku has proposed a solution that fixes his particular problem, that's fine but there were other solutions to it, that could maybe be better.",30MVJZJNHN10DWBOH7KBQLG8AYG9JM,TRUE,YY,"$$$$‰ÛÜ@thibaudgg thibaudgg merged commit 6f1a0ac into guard:master on Oct 10, 2011",,
3FJ2RVH25ZUYLGFMKK9I3KZ6OYF92E,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:52 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 07:03:38 PST 2016,Wed Nov 09 07:21:56 PST 2016,Wed Nov 16 07:21:56 PST 2016,,,,1098,98% (39/40),0% (0/1),0% (0/1),10003,https://github.com/symfony/symfony/pull/5248,https://github.com/symfony/symfony/graphs/contributors,fabpot,"fabpot, nicolas-grekas, webmozart",10,31,{},sc0ttkclark,sc0ttkclark,"fabpot, nicolas-grekas, webmozart, kriswallsmith, pborreli, romainneutron, bamarni","sc0ttkclark, travisbot, mevers47, dlsniper, Fonsini, Jaza, shacharsol","Y,core","Having sf embedded inside another app is not that farfetched, so IMHO this should be supported.$$$$Yeah, I agree we should support this, but I guess in that case we should have a more explicit mechanism to delegate session starting.","Y,core","As apparently before PHP 5.4 tehre is no reliable way to check wether the session is started or not, I suggest instead to have a NativeProxySessionStorage, using the already existing NativeProxy handler, its code would be pretty straightforward, it'd never set any session ini setting, it'd never start any session, wouldn't use any metadatabag, because I don't think it makes sense to have 2 different starting points in that situation.Basically here we only want to say : ""the session management is handled outside symfony, if symfony needs the session, it should only populate the $_SESSION superGlobal with its stuff"".A drawback I see about this is whenever symfony needs to populate the session while it hasn't been started by the wrapping app, imo this case should not be considered / allowed, the wrapping app must start the session for all requests.","Y,bug|Y,inconsistency","You cannot assume that a non empty ID means the session has not started. The session ID can be set before starting a session.What problem are you trying to solve? I can give some better advice if I understand what issue you are experiencing.$$$$well to me the issue is that if Symfony2 is embedded into app X .. it means app X will execute code before and after. as a result if app X didnt start a session before Symfony2 was called, there is no guarantee that it will not want to start one afterwards. so imho session starting needs to be handled by only one app and the other simply has to hook into the other one.",N,{},3EJJQNKU9STAQQCKNOHC5T0O86MRHP,FALSE,NN,"fabpot closed this on Apr 21, 2013",,
3Z8UJEJOCZ1N6YB5OKNNMU4YUCF93P,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:52 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 05:39:09 PST 2016,Tue Nov 08 05:46:10 PST 2016,Tue Nov 15 05:46:10 PST 2016,,,,421,98% (39/40),0% (0/1),0% (0/1),10004,https://github.com/emberjs/ember.js/pull/365,https://github.com/emberjs/ember.js/graphs/contributors,tchak,"rwjblue, stefanpenner, wagenet",4,6,{},tchak,tchak,"locks, dgeb, hjdivad, stefanpenner, mmun, chancancode, trek, mixonic, rwjblue, chadhietala, ef4, machty, wagenet, ebryn, teddyzeenny, lukemelia, krisselden, tomdale, fivetanley, wycats","tchak, devinus, pangratz","Y,others","For the record, I'm interested in this too.","Y,core","Generally things are set by path to aid templating (like itemViewClass in CollectionView for example).If you need the view to be defined after the state is created (not sure of the use case), why not just bind it to that path?",N,{},N,{},3ERMJ6L4DZGM0LTG57ZJSHHKNRH7MQ,FALSE,NN,"tchak closed this on Jan 26, 2012",,
3Q9SPIIRWJAY2FNYQACPNMQFYNSAWC,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:52 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 06:09:21 PST 2016,Wed Nov 09 06:16:58 PST 2016,Wed Nov 16 06:16:58 PST 2016,,,,457,98% (39/40),0% (0/1),0% (0/1),10005,https://github.com/gitlabhq/gitlabhq/pull/3351,https://github.com/gitlabhq/gitlabhq/graphs/contributors,randx,"randx, tsigo, DouweM",3,10,{},Andrew8xx8,Andrew8xx8,"maxlazio, jacobvosmaer, stanhu, rymai, Razer6, tmaczukin, vsizov, tsigo, NARKOZ, DouweM, riyad, jvanbaarsen, dosire, axilleas, randx","Andrew8xx8, coveralls","Y,core","Looks impressing. Since I'm a bit busy with some other stuff I'll made a review in a week or something. Please be patient. And thank you for contribution :)$$$$+1",N,{},N,{},N,{},3R6P78PK7LZ969U1774PK8P5HQWTGT,TRUE,YY,"randx merged commit e0af7ce into gitlabhq:master on Jun 4, 2013",,
31J7RYECZLEMXXYZQDCU3AGWWMI1LM,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,1,BatchId:2567999;,3600,604800,Tue Nov 08 16:18:50 PST 2016,,,A2958TQAW43MP6,Approved,Fri Nov 04 08:39:34 PDT 2016,Fri Nov 04 08:45:33 PDT 2016,Fri Nov 11 07:45:33 PST 2016,2016-11-11 15:46:29 UTC,,,359,100% (12/12),100% (12/12),100% (11/11),10006,https://github.com/tastejs/todomvc/pull/120,https://github.com/tastejs/todomvc/graphs/contributors,sindresorhus,"sindresorhus, passy, addyosmani",3,31,{},mikaelkaron,mikaelkaron,"sindresorhus, passy, addyosmani, samccone, stephenplusplus, ColinEberhardt, cburgdorf","boushley, stas","Y,core","Thanks for the contribution :D$$$$It looks pretty good :)$$$$@mikaelkaron Thanks for the update!","Y,core","I'll try to land 0.0.2 ASAP, so please target this for 1.0$$$$Funny problem there actually, it's jQuery that triggers a simulated focusout event on the containing input as I .remove() the li, thereby re-triggering the whole chain (I click() a corresponding .destroy when the input is empty and we lose focus)",N,{},N,{},3HOSI13XH0CZD0ODJR329J4LZAZDDJ,FALSE,NY,"mikaelkaron referenced this pull request on May 29, 2013 MergedUpdated project to TroopJS 2.x #575",,
38LRF35D5LKLQQZ8MVIEIQRC7XP3UA,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:53 PDT 2016,,,A38NFX88VZDMJ3,Approved,Tue Oct 25 16:34:52 PDT 2016,Tue Oct 25 17:00:07 PDT 2016,Tue Nov 01 17:00:07 PDT 2016,2016-11-02 00:00:14 UTC,,,1515,100% (7/7),100% (7/7),0% (0/0),10007,https://github.com/laravel/framework/pull/720,https://github.com/laravel/framework/graphs/contributors,taylorotwell,"taylorotwell, GrahamCampbell, lucasmichot",5,13,{},barryvdh,barryvdh,"taylorotwell, GrahamCampbell, lucasmichot, JosephSilber, themsaid, crynobone","RSully, zantx3, jonphipps",N,{},N,,"Y,improve","I can't tell from the web interface what is going on (my first guess is tabs vs spaces) but for files like src/Illuminate/Auth/AuthManager.php any idea why the diff is a complete remove/add of the file?Also if we're going to do all of these changes might it be wise to also consider either removing @return from __constructor or switching to @return self as per phpdoc.org (see #702)What's with half of these files files having EVERY line changed?!","Y,not fit.","However, I'm not sure if your'e wasting your time or not. There was an issue open which Taylor has closed (which you've referred to in your PR, #701). I don't like your chances of having it merged.",3VELCLL3GL72JPMXU4EXWH6XJBY1FH,FALSE,NN,"I'm not comfortable merging this with those entire file replacements being shown in the diff.barryvdh deleted the unknown repository",,
3E9VAUV7BW22RKIY5BUD8JBV9VSAYB,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:53 PDT 2016,,,A1M6A01CROTF3K,Approved,Tue Oct 25 05:21:32 PDT 2016,Tue Oct 25 05:41:18 PDT 2016,Tue Nov 01 05:41:18 PDT 2016,2016-11-01 12:42:14 UTC,,,1186,100% (9/9),100% (9/9),0% (0/0),10010,https://github.com/OpenImageIO/oiio/pull/82,https://github.com/OpenImageIO/oiio/graphs/contributors,lgritz,"lgritz, edgarv",3,13,{},matekm,matekm,"lgritz, edgarv, matekm, inequation","dewyatt, lgritz","Y,core|Y,others","Nice! I figured webp support would be pretty easy. I guess I can scratch this off my list!$$$$I think Daniel explanation is good enough. The whole decode magic is in webp library and we have the ability to choose if we want return data in RGB/RGBA/... formats.",,"I know you asked Robert, but I might be able to answer some questions.WebP uses VP8 which I believe means data is always stored as Y'UV (Y'CbCr).Chapter 2 ""Format Overview"" of VP8 bitstream specs:http://tools.ietf.org/id/draft-bankoski-vp8-bitstream.txtHowever, libwebp provides decoding functions that convert to variants of RGB:WebPDecodeRGB returns RGB image samples in [r0, g0, b0, r1, g1, b1, ...] order.WebPDecodeRGBA returns RGBA image samples in [r0, g0, b0, a0, r1, g1, b1, a1, ...] order.WebPDecodeBGR returns BGR image samples in [b0, g0, r0, b1, g1, r1, ...] order.WebPDecodeBGRA returns BGRA image samples in [b0, g0, r0, a0, b1, g1, r1, a1, ...] order.","Y,improve","Sorry, Daniel, I'm sure Robert didn't mean to step on your toes. On the other hand, I really think that a good implementation of PSD will keep you busy the whole summer, you shouldn't be worried about this.",N,{},3R2UR8A0IB44F3KJ00IUEKJCGM0OX4,FALSE,NY,matekm wants to merge 1 commit into OpenImageIO:master from matekm:webplugin,,
3J5XXLQDHMZL35O8RLSJECTVL4Y3VZ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:52 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Wed Nov 09 08:43:45 PST 2016,Wed Nov 09 08:57:57 PST 2016,Wed Nov 16 08:57:57 PST 2016,,,,852,98% (39/40),0% (0/1),0% (0/1),10013,https://github.com/jashkenas/backbone/pull/697,https://github.com/jashkenas/backbone/graphs/contributors,jashkenas,"jashkenas, braddunbar, akre54",16,35,{},tbranyen,jashkenas,"akre54, megawac, knowtheory, samuelclay, tgriesser, tbranyen, jashkenas, braddunbar, caseywebdev, jridgewell","powmedia, nibblebot, TheCloudlessSky, MFoster, khepin, jergason, BlakeWilliams, RStankov, studgeek, grydstedt","Y,others","+1 for a proper .once() method which removes the event listener; could help prevent memory leaks$$$$+1 for this. @jashkenas - it's not the same thing since _.once would still keep the handler bound after the first time it's called. Here's my use case:Create a model.Bind once to the sync event to the model.Show a dialog and when closed, save the model.The once'd sync event is triggered (with { wait: true}) and the model is added to the collection.For example:var newAppointment = new mos.model.Appointment();newAppointment.once('sync', function() {  // Only add to the collection after it has been saved.  collection.add(newAppointment);});var dialog = new mos.ui.AppointmentDialog({  model: newAppointment,  mode: mos.ui.DialogMode.CREATE});dialog.render(); // User then clicks 'Save' which would trigger ""model.save()""$$$$+1 @jashkenas please re-open this for consideration. _.once does not provide the same functionality$$$$I like this one too, use it quite regularly. +1$$$$@tbranyen +1. It's very convenient for setting off one time operations that need to respond once to a recurring event, such as a set up operation.$$$$Just another word of support: I would love the once functionality in Backbone events. It is in the node EventEmitter, and is very useful there.$$$$+1",N,{},N,{},"Y, no value","Mornin' @tbranyen! The approach is interesting but I have to wonder, given the way once is essentially a callback, how often it would be useful to off the handler anyway. It's a good deal of overhead for something that can already be done with little effort and no extra cost.model.on('event', function handler() {  model.off('event', handler);  // ...}, model);// ...if (condition) model.off('event', handler);",36PW28KO40K67ZZ1VCNKP0E1GNTEAD,FALSE,NN,"jashkenas closed this in 7dbfecc on Dec 8, 2012",,
3GS542CVJVBQKDY923BG1R2I88695F,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:53 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:53 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 07:29:25 PST 2016,Mon Nov 07 07:38:33 PST 2016,Mon Nov 14 07:38:33 PST 2016,,,,548,98% (39/40),0% (0/1),0% (0/1),10014,https://github.com/numpy/numpy/pull/3306,https://github.com/numpy/numpy/graphs/contributors,juliantaylor,"charris, teoliphant, cournape",5,16,{},juliantaylor,juliantaylor,"rgommers, jaimefrio, pv, certik, teoliphant, rkern, njsmith, stefanv, charris, cournape, ahaldane, seberg, mwiebe, juliantaylor",FreddieWitherden,"Y,core|Y,others","Being able to memmap file descriptors is handy in all sorts of cases. I'mnot sure how important they are for numpy's purposes, but certainly beingable to memmap an anonymous temporary file seems useful, which was theoriginal issue. (The whole point of such a file is that it doesn't *have* aname -- which means it will be automatically cleaned up as soon as theprogram using it exits -- so getting a filename from a descriptor iscertainly not possible in this case, never mind easy.)$$$$In our project we have a strong use case for allowing np.load to be able to memory map arbitrary file objects. Our code makes extensive use of uncompressed .npz (zip) files for our file format which are often several gigabytes in size. As they are uncompressed the .npy files inside this file are prime candidates for memory mapping. Without too much work one can get the offset of each entry inside of the file. Exploiting this, however, requires that np.load accept file objects as opposed to file names with the mmap parameter.","Y,core",I think a more informative error message would be useful however this goes.,"Y,inconsistency","You are testing with a bona-fide file object (or the Python 3 equivalent), not a generic file-like object like a GzipFile which cannot be memmapped. That's the intention behind the restriction.$$$$We're not ""checking for gzip"". We're documenting the restrictions on valid input to the function. You can't memory map onto arbitrary file-like objects.open_memmap is documented. It is part of the numpy.lib.format API. It's not just for implementing numpy.load.",N,{},3OLF68YTNAPYDDZXQN7Q7IZ0Q8WFAK,FALSE,NN,"juliantaylor closed this on May 6, 2013",,
3WUVMVA7OBR2WAS31XWWMQKXFPVZAQ,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:54 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:53 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Thu Nov 10 03:44:09 PST 2016,Thu Nov 10 03:54:43 PST 2016,Thu Nov 17 03:54:43 PST 2016,,,,634,98% (39/40),0% (0/1),0% (0/1),10015,https://github.com/appium/appium/pull/793,https://github.com/appium/appium/graphs/contributors,penguinho,"jlipps, bootstraponline, sebv",5,14,Contributors who have made only 4-10 commits (whereas the project has thousands of commits) are to be labeled as core or external?,tokunbo,tokunbo,"santiycr, edgy360, jlipps, penguinho, moizjv, bootstraponline, bernii, sebv, admc, imurchie, DylanLacey, paymand, sourishkrout, sah, Jonahss","tokunbo, xuru",N,{},"Y,core|Y,others","I would suggest having an array of possible node locations and loop through them in order using fileExists to determine if it's available. Once found, break out of the loop and go own with life, otherwise present the error to the user.$$$$the proper way to do this is with applescript. There is a node path property on Appium.app (for those who don't put i in the applications folder) jlipps already does this somewhere else in the same file","Y,improve","I don't think we can hardcoe a guess to the /Application folder, that assumes that's where people put it, which often they don't we should correct this diff to use AppleScript and let LaunchServices find Appium.app","Y, no value","Haha. Well it sounds like there's a much better solution out there for you, in the guise of installing a global node binary that works! I'd rather help you debug that at the hackathon on Monday than build this somewhat odd feature.",37KGEN7NJ4EHRUUTT9LS9720TMRPPX,FALSE,NN,"penguinho closed this on Jun 25, 2013",,
3E6L1VR4XWAV4RP0A8LD3T2T71C6FK,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:54 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:53 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Mon Nov 07 05:12:25 PST 2016,Mon Nov 07 05:21:33 PST 2016,Mon Nov 14 05:21:33 PST 2016,,,,548,98% (39/40),0% (0/1),0% (0/1),10016,https://github.com/gregbell/active_admin/pull/1952,https://github.com/gregbell/active_admin/graphs/contributors,seanlinsley,"seanlinsley, gregbell, timoschilling",10,31,{},tinynumbers,tinynumbers,"macfanatic, pcreux, mattvague, jpmckinney, jancel, timoschilling, gregbell, seanlinsley","tinynumbers, brodock, ncimino, mindhalt, socjopata, mwlang, smidwap","Y,core|Y,others","@tinynumbers I'm convinced that this should be merged, but I'm still waiting on input from the rest of the team.$$$$Same here. Please merge it!$$$$+1 please do it!the way it is right now is obviously broken and the fix obviously works as many many others are using the fork with success (i include myself on those)",N,{},"Y,inconsistency","@Daxter - Greg is out of pocket for the next 2 weeks. I see the reasons mentioned in #1852, but I'm not sure of the best way to fix either. I'm not convinced reverting this change is a good move, or one that at least should be reserved for the 0.6 release since it is an important change.",N,{},382M9COHEI3QM8DZ1H4BP1QUL74UEI,TRUE,YY,"seanlinsley merged commit 6238c12 into activeadmin:master on Jul 9, 2013",,
3RDTX9JRTYP57HCSQWQDZBGEZE197U,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:54 PDT 2016,1,BatchId:2567999;,3600,604800,Mon Oct 31 21:50:54 PDT 2016,,,A1M6A01CROTF3K,Approved,Wed Oct 26 02:54:41 PDT 2016,Wed Oct 26 03:02:51 PDT 2016,Wed Nov 02 03:02:51 PDT 2016,Tue Nov 01 17:51:55 PDT 2016,,,490,100% (9/9),100% (9/9),0% (0/0),10018,https://github.com/xapi-project/xen-api/pull/957,https://github.com/xapi-project/xen-api/graphs/contributors,jonludlam,"johnelse, robhoes, jonludlam, simonjbeaumont, jonathanknowles, zli, rokstrnisa, thomassa",6,12,{},grantmcwilliams,grantmcwilliams,"johnelse, robhoes, jonludlam, simonjbeaumont, jonathanknowles, zli, rokstrnisa, thomassa","xen-git, jonludlam, robhoes","Y,others","Thanks, the man pages look great!","Y,others",Preferably they'd be distributed. On our side we have a script that creates manpages from the asciidoc source and we've created a SPEC file for the RPM itself. None of this is done though. When it's done we can share that too if there's interest.,N,{},"Y, no value","I have a minor question - I'm simply not sure of the protocol here, but what does the 'AUTHORS' section mean? Is it authorship of the manpage or of the tool it's describing?",3WAKVUDHUX45DTYPE9Q5JRYDWN97UL,TRUE,YY,jonludlam merged commit 2b057d9 into xapi-project:master on 22 Apr 2013,,
33BFF6QPI1ZYIUODHVXF0EC9SD03W9,3GSIANI2QT1P641SSQVC59IHABEPDF,Batch Task: Tagging Github Comments. (GitHub User Only.),Read comments for pull requests. Then answer 5 questions. Detailed Instruction and examples are offered.,"Batch, Tag, Tagging, Github, Comment, Quick, Easy.",$0.50 ,Mon Oct 24 21:50:54 PDT 2016,2,BatchId:2567999;,3600,604800,Mon Nov 21 06:26:54 PST 2016,,,ABFSVRWVFHZ6P,Submitted,Tue Nov 08 06:27:00 PST 2016,Tue Nov 08 06:37:16 PST 2016,Tue Nov 15 06:37:16 PST 2016,,,,616,98% (39/40),0% (0/1),0% (0/1),10019,https://github.com/cfengine/design-center/pull/14,https://github.com/cfengine/design-center/graphs/contributors,zzamboni,"tzz, zzamboni, nickanderson",3,14,{},neilhwatson,neilhwatson,"phnakarin, tzz, atsaloli, estenberg, nickanderson, zzamboni",neilhwatson,"Y,core","Hi Neil - thanks for the submission! I think the paths bundle is an excellent idea.I have made a couple of comments on some lines.$$$$I like the paths idea too. Maybe its just me and my brain wanting to limit scope, does anyone else find it easier to read a commit that is just a single sketch?","Y,core","neil what do you think about the bundle name change from cronjobs to cronjobs_add since it appends if not found. I think that would leave logical namespace for something like cronjobs_delete and other patterns for dealing with cronjobs, perhaps cron_d style related.$$$$I agree - I think the sketch should be named cronjobs (or just cron), with the bundle names indicative of their function (e.g. cron_add, cron_delete, etc.)",N,{},N,{},39O5D9O87UGRQGG2Q62FC40SOCIC31,TRUE,YY,"zzamboni merged commit da6242c into cfengine:master on Mar 1, 2012",,